{"version":3,"sources":["css/Timetable.module.css","css/Contact.module.css","css/Classes.module.css","css/CourseSelect.module.css","css/ClassPreference.module.css","css/ClassSelect.module.css","css/Faq.module.css","css/About.module.css","css/Header.module.css","css/Options.module.css","css/CampusToggle.module.css","css/Searchbar.module.css","css/ReserveSlotsBubbles.module.css","css/TimetablePreviews.module.css","css/ReserveSlotsTable.module.css","css/TimetablesSection.module.css","css/Button.module.css","css/ReserveSlots.module.css","css/Timetables.module.css","css/Main.module.css","css/App.module.css","assets/logo.svg","components/Header.js","utils/timetableTemplateData.js","components/ReserveSlotsTable.js","components/ReserveSlotsBubbles.js","components/ReserveSlots.js","components/CampusToggle.js","assets/searchIcon.svg","components/Searchbar.js","components/Button.js","components/CourseSelect.js","components/ClassPreference.js","utils/generalUtils.js","components/ClassSelect.js","components/Options.js","components/TimetablePreview.js","assets/leftArrow.svg","assets/rightArrow.svg","components/TimetablePreviews.js","assets/camera.svg","components/Timetable.js","components/InfoCols.js","components/Classes.js","components/Timetables.js","components/TimetablesSection.js","assets/quarterEllipse.svg","components/Main.js","assets/aboutPageLady.svg","assets/aboutPageSchedules.svg","components/About.js","assets/toggleTriangle.svg","components/Faq.js","assets/faqPattern.svg","assets/contactIllustration.svg","assets/contactNameIcon.svg","assets/contactEmailIcon.svg","assets/contactMessageIcon.svg","components/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","location","useState","expanded","setExpanded","Navbar","collapseOnSelect","variant","expand","className","styles","navbar","Container","Brand","href","src","logo","alt","logoType","highlight","Toggle","onClick","Collapse","id","Nav","activeKey","pathname","navLinks","activeClassName","active","to","blockLink","timetableTemplateData","ReserveSlots","reservedSlots","toggleReserve","dayCount","getClassName","cellContent","rowIndex","cellIndex","cell","timetableStyles","test","slotCell","headDay","theoryTiming","labTiming","headTop","lunch","includes","reserved","evenDay","oddDay","timetableWrapper","timetable","slice","map","row","index","rowSpan","onMouseDown","onMouseEnter","e","buttons","ReserveSlotsBubbles","Bubble","col","alreadyShown","i","j","bubble","container","separator","ReserveSlotsTable","CampusToggle","selectedCampus","toggle","selected1","selected2","element","target","parentNode","classList","contains","remove","add","Searchbar","selector","data","getUnique","placeholder","resultString","onSelect","keys","suggestionElement","threshold","shouldSort","maxResults","suggestions","setSuggestions","query","setQuery","inputText","setInputText","currentItem","setCurrentItem","fuse","Fuse","useEffect","results","search","ele","item","notFocused","type","name","input","onInput","value","onFocus","parentElement","onBlur","onKeyDown","code","preventDefault","prevItem","length","document","querySelector","current","click","blur","autoComplete","suggestion","Button","children","allProps","primary","clear","button","CourseSelect","stageCourse","unstageCourse","getCourseID","stagedCourses","selectCourse","deselectCourse","selectedCourseID","filteredCourses","coursesData","filter","course","undefined","find","stagedCourse","seenCourses","Set","duplicate","has","title","selectedString","console","log","startsWith","forEach","classNames","key","courseSuggestion","addedCourses","resultsWrapper","selectedCourse","courseTitle","delete","stopPropagation","courseCode","courseType","ClassPreference","classes","removeClass","setReorderedClasses","classPriority","addedClasses","onDragEnd","result","destination","splice","source","reorderedItem","droppableId","provided","classesList","ref","innerRef","droppableProps","classData","draggableId","class","draggableProps","dragHandleProps","facultyName","erpId","classSlots","addClassesButton","mapping","verifyPreferencesSet","courseIDs","alert","unsetCourses","courseID","push","join","getSlotMapping","Object","rowNo","colNo","pattern","slotA","slotB","getNumberOfTotalPossibleSelections","first","keysArray","reduce","total","verifyNumberOfClasses","courseIDWithTooFewClasses","numberOfPossibilities","minutes","confirm","toLocaleString","removeReservedSlots","newClasses","JSON","parse","stringify","classToBeChecked","split","slot","populateSlotCombination","slotsString","objectToPopulate","a","window","Worker","worker","sort","courseIDa","courseIDb","requestWorker","slotCombinationString","possibleSlotCombinations","Promise","res","rej","channel","MessageChannel","port1","onmessage","close","error","postMessage","port2","time","populatedSlotCombination","timeEnd","getSlotCombinations","possibleSlotCombinationsObject","slotCombination","FacultySelect","addClass","selectedClasses","defaultQuery","searchQuery","slots","classesToDisplay","setClassesToDisplay","filteredClasses","classesData","completeFilteredClasses","filteredFaculties","facultiesData","faculty","availableSlots","completeFilteredClass","queryRow","htmlFor","prevQuery","obj","onChange","Array","from","b","_classData","Options","generateTimetables","selectSlots","setReservedSlots","setStagedCourses","setSelectedClasses","currentlySelectedCourseID","setCurrentlySelectedCourseID","prevSelectedClasses","prevReservedSlots","slotToBeChecked","sectionTitle","btns","btn","coursePreferences","prevSelectedCourses","prevCourse","object","reorderedClasses","ClassSelect","generateTimetablesButton","scrollIntoView","behavior","TimetablePreview","select","theory","lab","timetablePreview","querySelectorAll","selectedTimetablePreview","getElementById","TimetablePreviews","schedulesSlots","pageCount","Math","ceil","currentPage","setCurrentPage","currentPageData","leftArrowNode","leftArrow","rightArrowNode","rightArrow","panel","legend","theoryLegend","colorExample","legendLabel","labLegend","previousLabel","nextLabel","onPageChange","selected","containerClassName","paginatedPreviews","pageClassName","page","previousLinkClassName","previous","nextLinkClassName","next","disabledClassName","disabled","forcePage","Timetable","hoveredSlots","getCellContent","schedule","hoveredTheory","hoveredLab","cameraImg","help","html2canvas","then","canvas","createElement","toDataURL","download","InfoCols","entry","getID","ignoreCols","onMouseLeave","Classes","schedules","setHoveredSlots","classPreferences","getScore","findIndex","getScheduleScore","score","fieldName","array","some","currentElement","newSelectedClasses","isSelectedClass","currentCourseID","tableRow","faded","InteractionElement","currentClass","customKey","checked","courseIDToBeChecked","defaultChecked","checkbox","handleHover","hoveredClass","hoverRow","handleDehover","columnKeys","colsHeadings","colName","headRow","tableWrapper","table","colSpan","pageLabelBuilder","schedulesPagination","marginPagesDisplayed","Timetables","timetablesScreen","TimetablesSection","currentlySelectedSlots","screen","disableScreen","goto","Main","allSchedules","setAllSchedules","setClasses","setCurrentlySelectedSlots","getAllSlotCombinations","getSchedulesForSlots","newSlotsString","prevAllSchedules","About","cols","content","lady","features","Faq","answers","ContextAwareToggle","eventKey","callback","currentEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionToggle","isCurrentEventKey","clicked","toggleTriangle","faqContainer","Accordion","accordion","question","Card","questionCard","header","headerText","Body","bodyText","fadedText","Contact","wrapper","subTitle","col1","acceptCharset","action","method","emailForm","onSubmit","reset","inputContainer","contactNameIcon","placeholderImage","inputField","nameInput","disablePlaceholder","required","contactEmailIcon","emailInput","messageInputContainer","contactMessageIcon","messageInput","rows","submitRow","sendButton","col2","contactIllustration","HeaderWithRouter","withRouter","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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F,CACE,GACA,MACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,KAEF,CACE,MACA,SACA,KACA,KACA,KACA,MACA,MACA,IACA,QACA,KACA,KACA,KACA,MACA,MACA,IACA,MAEF,CACE,GACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,KAEF,CACE,MACA,SACA,KACA,KACA,KACA,MACA,OACA,IACA,QACA,KACA,KACA,KACA,MACA,OACA,IACA,MAEF,CACE,GACA,MACA,KACA,KACA,KACA,MACA,MACA,MACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,KAEF,CACE,MACA,SACA,KACA,KACA,KACA,KACA,KACA,IACA,QACA,KACA,KACA,KACA,MACA,OACA,IACA,MAEF,CACE,GACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,KAEF,CACE,MACA,SACA,KACA,KACA,KACA,MACA,OACA,IACA,QACA,KACA,KACA,KACA,MACA,OACA,IACA,MAEF,CACE,GACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,KAEF,CACE,MACA,SACA,KACA,KACA,MACA,MACA,MACA,IACA,QACA,KACA,KACA,MACA,MACA,OACA,IACA,MAEF,CACE,GACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,KAEF,CACE,MACA,SACA,KACA,MACA,MACA,MACA,MACA,IACA,QACA,MACA,MACA,MACA,MACA,MACA,IACA,MAEF,CACE,GACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,KAEF,CACE,MACA,SACA,MACA,MACA,MACA,MACA,MACA,IACA,QACA,MACA,MACA,MACA,MACA,MACA,IACA,OAEF,CACE,GAC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","file":"static/js/main.32d13e9c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"legend\":\"Timetable_legend__2PSyd\",\"container\":\"Timetable_container__3gGFT\",\"colorExample\":\"Timetable_colorExample__3d6y3\",\"theoryLegend\":\"Timetable_theoryLegend__1W9fB\",\"labLegend\":\"Timetable_labLegend__1zV_c\",\"timetablePreview\":\"Timetable_timetablePreview__-TcD6\",\"selectedTimetablePreview\":\"Timetable_selectedTimetablePreview__2y_2x\",\"timetable\":\"Timetable_timetable__JP761\",\"cell\":\"Timetable_cell__1ACp7\",\"headTop\":\"Timetable_headTop__nM3Yz\",\"headDay\":\"Timetable_headDay__WLVUU\",\"lunch\":\"Timetable_lunch__VUZ7u\",\"theoryTiming\":\"Timetable_theoryTiming__346O2\",\"labTiming\":\"Timetable_labTiming__3TyOJ\",\"hoveredTheory\":\"Timetable_hoveredTheory__1Bygn\",\"hoveredLab\":\"Timetable_hoveredLab__1UdHO\",\"theory\":\"Timetable_theory__2IZ6u\",\"lab\":\"Timetable_lab__p-UQm\",\"buttons\":\"Timetable_buttons__3Ha0P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Contact_wrapper__sXz4Z\",\"container\":\"Contact_container__2l9so\",\"title\":\"Contact_title__CFIIO\",\"goto\":\"Contact_goto__3vNWD\",\"subTitle\":\"Contact_subTitle__24nOz\",\"cols\":\"Contact_cols__3eC40\",\"col\":\"Contact_col__332Np\",\"col1\":\"Contact_col1__SRu_0\",\"col2\":\"Contact_col2__1KpMm\",\"emailForm\":\"Contact_emailForm__zh3q5\",\"submitRow\":\"Contact_submitRow__3R2py\",\"sendButton\":\"Contact_sendButton__1WPsZ\",\"inputField\":\"Contact_inputField___TORy\",\"inputContainer\":\"Contact_inputContainer__3yoeG\",\"placeholder\":\"Contact_placeholder__2olhU\",\"disablePlaceholder\":\"Contact_disablePlaceholder__1mUVZ\",\"messageInputContainer\":\"Contact_messageInputContainer__-a0YM\",\"pattern\":\"Contact_pattern__3Y3BL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Classes_container__3oNUc\",\"label\":\"Classes_label__28GA2\",\"table\":\"Classes_table__273at\",\"tableWrapper\":\"Classes_tableWrapper__1VNP_\",\"tableRow\":\"Classes_tableRow__1_nHG\",\"headRow\":\"Classes_headRow__GeBqp\",\"cell\":\"Classes_cell__1CPnn\",\"checkbox\":\"Classes_checkbox__I78b1\",\"loading\":\"Classes_loading__3iznF\",\"error\":\"Classes_error__28sLW\",\"selectedCoursesRow\":\"Classes_selectedCoursesRow__1KvRz\",\"activeRow\":\"Classes_activeRow__3N80i\",\"hoverRow\":\"Classes_hoverRow__39FWP\",\"panel\":\"Classes_panel__1woB8\",\"schedulesPagination\":\"Classes_schedulesPagination__3cf-e\",\"page\":\"Classes_page__1YsK_\",\"active\":\"Classes_active__wppKW\",\"faded\":\"Classes_faded__34z46\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CourseSelect_container__1WIT6\",\"addedCourses\":\"CourseSelect_addedCourses__xLag3\",\"title\":\"CourseSelect_title__2BURQ\",\"buttons\":\"CourseSelect_buttons__3iT5P\",\"courseSuggestion\":\"CourseSelect_courseSuggestion__HOpWn\",\"resultsWrapper\":\"CourseSelect_resultsWrapper__2psSN\",\"results\":\"CourseSelect_results__3Gi94\",\"course\":\"CourseSelect_course__2IF0G\",\"courseTitle\":\"CourseSelect_courseTitle__3JG3F\",\"courseCode\":\"CourseSelect_courseCode__88RQU\",\"courseType\":\"CourseSelect_courseType__32Z91\",\"delete\":\"CourseSelect_delete__18M5F\",\"selectedCourse\":\"CourseSelect_selectedCourse__1Gtyl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ClassPreference_container__1xVlf\",\"classPriority\":\"ClassPreference_classPriority__2hdRX\",\"addClassesButton\":\"ClassPreference_addClassesButton__5OIAK\",\"title\":\"ClassPreference_title__3SV0i\",\"addedClasses\":\"ClassPreference_addedClasses__2FaQa\",\"buttons\":\"ClassPreference_buttons__2Zp99\",\"resultsWrapper\":\"ClassPreference_resultsWrapper__1OPgU\",\"results\":\"ClassPreference_results__3yiQv\",\"classesList\":\"ClassPreference_classesList__2YPyN\",\"class\":\"ClassPreference_class__39kcv\",\"facultyName\":\"ClassPreference_facultyName__17p9w\",\"delete\":\"ClassPreference_delete__2vrB4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ClassSelect_container__1ydBB\",\"queryRow\":\"ClassSelect_queryRow__2otaM\",\"search\":\"ClassSelect_search__3b9xL\",\"slots\":\"ClassSelect_slots__3U5yc\",\"resultsWrapper\":\"ClassSelect_resultsWrapper__1WGn1\",\"results\":\"ClassSelect_results__3tFPo\",\"class\":\"ClassSelect_class__3Wjsu\",\"facultyName\":\"ClassSelect_facultyName__2EXC3\",\"add\":\"ClassSelect_add__2bha6\",\"classSlots\":\"ClassSelect_classSlots__1pq3g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Faq_container__3J3gl\",\"title\":\"Faq_title__fjUWe\",\"faqContainer\":\"Faq_faqContainer__1ant9\",\"questionCard\":\"Faq_questionCard__zX3kI\",\"header\":\"Faq_header__1E2PC\",\"bodyText\":\"Faq_bodyText__ELlJa\",\"btn\":\"Faq_btn__26-qA\",\"clicked\":\"Faq_clicked__igsMp\",\"fadedText\":\"Faq_fadedText__138qD\",\"accordion\":\"Faq_accordion__18zGP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"About_container__2HpWO\",\"title\":\"About_title__2YRE0\",\"goto\":\"About_goto__1oqXo\",\"cols\":\"About_cols__33etG\",\"col\":\"About_col__2LReP\",\"content\":\"About_content__aA2PC\",\"features\":\"About_features__2fkfG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Header_navbar__R2Bqe\",\"logo\":\"Header_logo__8aW8A\",\"logoType\":\"Header_logoType__18NSP\",\"highlight\":\"Header_highlight__2pC3M\",\"navLinks\":\"Header_navLinks__1QPcK\",\"active\":\"Header_active__2f530\",\"blockLink\":\"Header_blockLink__2Dwe1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"coursePreferences\":\"Options_coursePreferences__B0R-s\",\"sectionTitle\":\"Options_sectionTitle__ahqg4\",\"title\":\"Options_title__2d3FT\",\"btns\":\"Options_btns__1C1JL\",\"btn\":\"Options_btn__2irpD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggle\":\"CampusToggle_toggle__13RDG\",\"selected1\":\"CampusToggle_selected1__3yu2R\",\"selected2\":\"CampusToggle_selected2__1Srh8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Searchbar_container__2Kigl\",\"input\":\"Searchbar_input__vOwuR\",\"suggestions\":\"Searchbar_suggestions__3XwfI\",\"notFocused\":\"Searchbar_notFocused__2jgux\",\"current\":\"Searchbar_current__3_7Fk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ReserveSlotsBubbles_container__3TMt5\",\"col\":\"ReserveSlotsBubbles_col__3q0-C\",\"separator\":\"ReserveSlotsBubbles_separator__1GL1K\",\"row\":\"ReserveSlotsBubbles_row__1H9aJ\",\"bubble\":\"ReserveSlotsBubbles_bubble__3qNkv\",\"reserved\":\"ReserveSlotsBubbles_reserved__3QiX2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TimetablePreviews_container__1yuwW\",\"panel\":\"TimetablePreviews_panel__mwaC7\",\"paginatedPreviews\":\"TimetablePreviews_paginatedPreviews__1ixY2\",\"page\":\"TimetablePreviews_page__3uxzJ\",\"active\":\"TimetablePreviews_active__LlVnA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ReserveSlotsTable_container__2MGDk\",\"timetableWrapper\":\"ReserveSlotsTable_timetableWrapper__2tBmB\",\"timetable\":\"ReserveSlotsTable_timetable__jnB4W\",\"cell\":\"ReserveSlotsTable_cell__owzGV\",\"label\":\"ReserveSlotsTable_label__1lymB\",\"slotCell\":\"ReserveSlotsTable_slotCell__FfBFv\",\"reserved\":\"ReserveSlotsTable_reserved__2u3Fj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screen\":\"TimetablesSection_screen__3HBW7\",\"disableScreen\":\"TimetablesSection_disableScreen__1XceB\",\"title\":\"TimetablesSection_title__2nkYj\",\"twoCols\":\"TimetablesSection_twoCols__2Xczp\",\"goto\":\"TimetablesSection_goto__1_KDi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__lNTtE\",\"clear\":\"Button_clear__1ZhQO\",\"primary\":\"Button_primary__mDaXX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ReserveSlots_container__V175S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timetablesScreen\":\"Timetables_timetablesScreen__3G9m-\",\"slotTitle\":\"Timetables_slotTitle__GadUZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Main_container__25Mdo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screen\":\"App_screen__13z2A\"};","export default __webpack_public_path__ + \"static/media/logo.b99510b6.svg\";","import styles from \"../css/Header.module.css\";\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\nimport logo from \"../assets/logo.svg\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nconst Header = ({ location }) => {\r\n  const [expanded, setExpanded] = useState(false);\r\n  return (\r\n    <>\r\n      <Navbar\r\n        collapseOnSelect\r\n        variant=\"light\"\r\n        expand=\"lg\"\r\n        className={styles.navbar}\r\n        expanded={expanded}\r\n      >\r\n        <Container>\r\n          <Navbar.Brand href=\"/\">\r\n            <img src={logo} alt=\"\" className={styles.logo} />\r\n            <strong className={styles.logoType}>\r\n              ly<span className={styles.highlight}>FFCS</span>aver\r\n            </strong>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle\r\n            aria-controls=\"basic-navbar-nav\"\r\n            onClick={() => setExpanded(expanded ? false : \"expanded\")}\r\n          />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav activeKey={location.pathname} className={styles.navLinks}>\r\n              <NavLink\r\n                activeClassName={styles.active}\r\n                to=\"/home\"\r\n                onClick={() => setExpanded(false)}\r\n              >\r\n                Home\r\n              </NavLink>\r\n              <NavLink\r\n                activeClassName={styles.active}\r\n                to=\"/about\"\r\n                onClick={() => setExpanded(false)}\r\n              >\r\n                About\r\n              </NavLink>\r\n              <NavLink\r\n                activeClassName={styles.active}\r\n                to=\"/faq\"\r\n                onClick={() => setExpanded(false)}\r\n              >\r\n                FAQs\r\n              </NavLink>\r\n              <NavLink\r\n                activeClassName={styles.active}\r\n                to=\"/contact\"\r\n                onClick={() => setExpanded(false)}\r\n              >\r\n                Contact Us\r\n              </NavLink>\r\n            </Nav>\r\n            <a\r\n              href=\"#\"\r\n              className={styles.blockLink}\r\n              onClick={() => setExpanded(false)}\r\n            >\r\n              HOW THIS WORKS?\r\n            </a>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const timetableTemplateData = [\r\n  [\r\n    \"Theory\",\r\n    \"Start\",\r\n    \"08:00\",\r\n    \"09:00\",\r\n    \"10:00\",\r\n    \"11:00\",\r\n    \"12:00\",\r\n    \"-\",\r\n    \"Lunch\",\r\n    \"14:00\",\r\n    \"15:00\",\r\n    \"16:00\",\r\n    \"17:00\",\r\n    \"18:00\",\r\n    \"18:46\",\r\n    \"19:01\",\r\n  ],\r\n  [\r\n    \"\",\r\n    \"End\",\r\n    \"08:45\",\r\n    \"09:45\",\r\n    \"10:45\",\r\n    \"11:45\",\r\n    \"12:45\",\r\n    \"-\",\r\n    \"Lunch\",\r\n    \"14:45\",\r\n    \"15:45\",\r\n    \"16:45\",\r\n    \"17:45\",\r\n    \"18:45\",\r\n    \"19:00\",\r\n    \"19:45\",\r\n  ],\r\n  [\r\n    \"Lab\",\r\n    \"Start\",\r\n    \"08:00\",\r\n    \"08:46\",\r\n    \"10:00\",\r\n    \"10:46\",\r\n    \"11:31\",\r\n    \"12:16\",\r\n    \"Lunch\",\r\n    \"14:00\",\r\n    \"14:46\",\r\n    \"16:00\",\r\n    \"16:46\",\r\n    \"17:31\",\r\n    \"18:16\",\r\n    \"-\",\r\n  ],\r\n  [\r\n    \"\",\r\n    \"End\",\r\n    \"08:45\",\r\n    \"09:30\",\r\n    \"10:45\",\r\n    \"11:30\",\r\n    \"12:15\",\r\n    \"13:00\",\r\n    \"Lunch\",\r\n    \"14:45\",\r\n    \"15:30\",\r\n    \"16:45\",\r\n    \"17:30\",\r\n    \"18:15\",\r\n    \"19:00\",\r\n    \"-\",\r\n  ],\r\n  [\r\n    \"MON\",\r\n    \"Theory\",\r\n    \"A1\",\r\n    \"F1\",\r\n    \"D1\",\r\n    \"TB1\",\r\n    \"TG1\",\r\n    \"-\",\r\n    \"Lunch\",\r\n    \"A2\",\r\n    \"F2\",\r\n    \"D2\",\r\n    \"TB2\",\r\n    \"TG2\",\r\n    \"-\",\r\n    \"V3\",\r\n  ],\r\n  [\r\n    \"\",\r\n    \"Lab\",\r\n    \"L1\",\r\n    \"L2\",\r\n    \"L3\",\r\n    \"L4\",\r\n    \"L5\",\r\n    \"L6\",\r\n    \"Lunch\",\r\n    \"L31\",\r\n    \"L32\",\r\n    \"L33\",\r\n    \"L34\",\r\n    \"L35\",\r\n    \"L36\",\r\n    \"-\",\r\n  ],\r\n  [\r\n    \"TUE\",\r\n    \"Theory\",\r\n    \"B1\",\r\n    \"G1\",\r\n    \"E1\",\r\n    \"TC1\",\r\n    \"TAA1\",\r\n    \"-\",\r\n    \"Lunch\",\r\n    \"B2\",\r\n    \"G2\",\r\n    \"E2\",\r\n    \"TC2\",\r\n    \"TAA2\",\r\n    \"-\",\r\n    \"V4\",\r\n  ],\r\n  [\r\n    \"\",\r\n    \"Lab\",\r\n    \"L7\",\r\n    \"L8\",\r\n    \"L9\",\r\n    \"L10\",\r\n    \"L11\",\r\n    \"L12\",\r\n    \"Lunch\",\r\n    \"L37\",\r\n    \"L38\",\r\n    \"L39\",\r\n    \"L40\",\r\n    \"L41\",\r\n    \"L42\",\r\n    \"-\",\r\n  ],\r\n  [\r\n    \"WED\",\r\n    \"Theory\",\r\n    \"C1\",\r\n    \"A1\",\r\n    \"F1\",\r\n    \"V1\",\r\n    \"V2\",\r\n    \"-\",\r\n    \"Lunch\",\r\n    \"C2\",\r\n    \"A2\",\r\n    \"F2\",\r\n    \"TD2\",\r\n    \"TBB2\",\r\n    \"-\",\r\n    \"V5\",\r\n  ],\r\n  [\r\n    \"\",\r\n    \"Lab\",\r\n    \"L13\",\r\n    \"L14\",\r\n    \"L15\",\r\n    \"L16\",\r\n    \"L17\",\r\n    \"L18\",\r\n    \"Lunch\",\r\n    \"L43\",\r\n    \"L44\",\r\n    \"L45\",\r\n    \"L46\",\r\n    \"L47\",\r\n    \"L48\",\r\n    \"-\",\r\n  ],\r\n  [\r\n    \"THU\",\r\n    \"Theory\",\r\n    \"D1\",\r\n    \"B1\",\r\n    \"G1\",\r\n    \"TE1\",\r\n    \"TCC1\",\r\n    \"-\",\r\n    \"Lunch\",\r\n    \"D2\",\r\n    \"B2\",\r\n    \"G2\",\r\n    \"TE2\",\r\n    \"TCC2\",\r\n    \"-\",\r\n    \"V6\",\r\n  ],\r\n  [\r\n    \"\",\r\n    \"Lab\",\r\n    \"L19\",\r\n    \"L20\",\r\n    \"L21\",\r\n    \"L22\",\r\n    \"L23\",\r\n    \"L24\",\r\n    \"Lunch\",\r\n    \"L49\",\r\n    \"L50\",\r\n    \"L51\",\r\n    \"L52\",\r\n    \"L53\",\r\n    \"L54\",\r\n    \"-\",\r\n  ],\r\n  [\r\n    \"FRI\",\r\n    \"Theory\",\r\n    \"E1\",\r\n    \"C1\",\r\n    \"TA1\",\r\n    \"TF1\",\r\n    \"TD1\",\r\n    \"-\",\r\n    \"Lunch\",\r\n    \"E2\",\r\n    \"C2\",\r\n    \"TA2\",\r\n    \"TF2\",\r\n    \"TDD2\",\r\n    \"-\",\r\n    \"V7\",\r\n  ],\r\n  [\r\n    \"\",\r\n    \"Lab\",\r\n    \"L25\",\r\n    \"L26\",\r\n    \"L27\",\r\n    \"L28\",\r\n    \"L29\",\r\n    \"L30\",\r\n    \"Lunch\",\r\n    \"L55\",\r\n    \"L56\",\r\n    \"L57\",\r\n    \"L58\",\r\n    \"L59\",\r\n    \"L60\",\r\n    \"-\",\r\n  ],\r\n  [\r\n    \"SAT\",\r\n    \"Theory\",\r\n    \"V8\",\r\n    \"X11\",\r\n    \"X12\",\r\n    \"Y11\",\r\n    \"Y12\",\r\n    \"-\",\r\n    \"Lunch\",\r\n    \"X21\",\r\n    \"Z21\",\r\n    \"Y21\",\r\n    \"W21\",\r\n    \"W22\",\r\n    \"-\",\r\n    \"V9\",\r\n  ],\r\n  [\r\n    \"\",\r\n    \"Lab\",\r\n    \"L71\",\r\n    \"L72\",\r\n    \"L73\",\r\n    \"L74\",\r\n    \"L75\",\r\n    \"L76\",\r\n    \"Lunch\",\r\n    \"L77\",\r\n    \"L78\",\r\n    \"L79\",\r\n    \"L80\",\r\n    \"L81\",\r\n    \"L82\",\r\n    \"-\",\r\n  ],\r\n  [\r\n    \"SUN\",\r\n    \"Theory\",\r\n    \"V10\",\r\n    \"Y11\",\r\n    \"Y12\",\r\n    \"X11\",\r\n    \"X12\",\r\n    \"-\",\r\n    \"Lunch\",\r\n    \"Y21\",\r\n    \"Z21\",\r\n    \"X21\",\r\n    \"W21\",\r\n    \"W22\",\r\n    \"-\",\r\n    \"V11\",\r\n  ],\r\n  [\r\n    \"\",\r\n    \"Lab\",\r\n    \"L83\",\r\n    \"L84\",\r\n    \"L85\",\r\n    \"L86\",\r\n    \"L87\",\r\n    \"L88\",\r\n    \"Lunch\",\r\n    \"L89\",\r\n    \"L90\",\r\n    \"L91\",\r\n    \"L92\",\r\n    \"L93\",\r\n    \"L94\",\r\n    \"-\",\r\n  ],\r\n];\r\nexport default timetableTemplateData;\r\n","import { useState } from \"react\";\r\nimport styles from \"../css/ReserveSlotsTable.module.css\";\r\nimport timetableStyles from \"../css/Timetable.module.css\";\r\nimport timetableTemplateData from \"../utils/timetableTemplateData\";\r\n\r\nconst ReserveSlots = ({ reservedSlots, toggleReserve }) => {\r\n  let dayCount = 0;\r\n  const id = \"reserve-slots\";\r\n  const getClassName = (cellContent, rowIndex, cellIndex) => {\r\n    let className = `${styles.cell} ${timetableStyles.cell} `;\r\n    const pattern = /[A-Z]+\\d+/;\r\n    if (pattern.test(cellContent)) className += ` ${styles.slotCell} `;\r\n    if (cellIndex < 2) {\r\n      className += ` ${timetableStyles.headDay} `;\r\n      return className;\r\n    }\r\n    if (rowIndex < 2) {\r\n      className += ` ${timetableStyles.theoryTiming} `;\r\n    }\r\n    if (rowIndex >= 2 && rowIndex < 4) {\r\n      className += ` ${timetableStyles.labTiming} `;\r\n    }\r\n    if (rowIndex < 4) {\r\n      className += ` ${timetableStyles.cell} ${timetableStyles.headTop} `;\r\n      return className;\r\n    }\r\n    if (cellContent === \"Lunch\") {\r\n      className += ` ${timetableStyles.lunch} `;\r\n      return className;\r\n    }\r\n    if (reservedSlots.includes(cellContent)) {\r\n      className += ` ${styles.reserved} `;\r\n      return className;\r\n    }\r\n    if (dayCount % 2 === 0) {\r\n      className += ` ${timetableStyles.evenDay} `;\r\n      return className;\r\n    } else {\r\n      className += ` ${timetableStyles.oddDay} `;\r\n      return className;\r\n    }\r\n  };\r\n  return (\r\n    <div className={styles.timetableWrapper}>\r\n      <table className={`${timetableStyles.timetable} ${styles.timetable}`}>\r\n        <thead>\r\n          {timetableTemplateData.slice(0, 4).map((row, rowIndex) => {\r\n            return (\r\n              <tr key={`${id}-row-${rowIndex}`}>\r\n                {row.map((cell, index) => {\r\n                  return cell === \"\" || index === 1 ? (\r\n                    <></>\r\n                  ) : (\r\n                    <th\r\n                      key={`${id}-${rowIndex}-${index}`}\r\n                      className={getClassName(cell, rowIndex, index)}\r\n                      rowSpan={index === 0 ? 2 : 1}\r\n                    >\r\n                      {cell !== \"Lunch\" ? cell : \"\"}\r\n                    </th>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </thead>\r\n        <tbody>\r\n          {timetableTemplateData.slice(4).map((row, rowIndex) => {\r\n            if (rowIndex % 2 === 0) dayCount++;\r\n            return (\r\n              <tr key={`${id}-row-${rowIndex}`}>\r\n                {row.map((cell, cellIndex) => {\r\n                  return cell === \"\" ||\r\n                    cellIndex === 1 ||\r\n                    (rowIndex > 0 && cell === \"Lunch\") ? (\r\n                    <></>\r\n                  ) : (\r\n                    <td\r\n                      key={`${id}-${rowIndex}-${cellIndex}`}\r\n                      className={`${getClassName(\r\n                        cell,\r\n                        rowIndex + 4,\r\n                        cellIndex\r\n                      )}`}\r\n                      rowSpan={cell === \"Lunch\" ? 14 : cellIndex === 0 ? 2 : 1}\r\n                      onMouseDown={() => toggleReserve(cell)}\r\n                      onMouseEnter={(e) => {\r\n                        if (e.buttons === 1) toggleReserve(cell);\r\n                      }}\r\n                    >\r\n                      {cell}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReserveSlots;\r\n","import timetableTemplateData from \"../utils/timetableTemplateData\";\r\nimport styles from \"../css/ReserveSlotsBubbles.module.css\";\r\nconst ReserveSlotsBubbles = ({ reservedSlots, toggleReserve }) => {\r\n  // const shown = [];\r\n  const Bubble = ({ cellContent, row, col }) => {\r\n    let alreadyShown = false;\r\n    // for (let i = 0; i < row; i++)\r\n    //   for (let j = 0; j < timetableTemplateData[row].length; j++)\r\n    //     if (cellContent === timetableTemplateData[i][j]) alreadyShown = true;\r\n    for (let i = 0; i < row; i++)\r\n      if (timetableTemplateData[i].includes(cellContent)) alreadyShown = true;\r\n    for (let j = 0; j < col; j++)\r\n      if (cellContent === timetableTemplateData[row][j]) alreadyShown = true;\r\n    if (alreadyShown) return <></>;\r\n    const pattern = /[A-Z]+\\d+/;\r\n    if (pattern.test(cellContent)) {\r\n      return (\r\n        <a\r\n          className={`${styles.bubble} ${\r\n            reservedSlots.includes(cellContent) ? styles.reserved : \"\"\r\n          }`}\r\n          onClick={() => toggleReserve(cellContent)}\r\n        >\r\n          {cellContent}\r\n        </a>\r\n      );\r\n    }\r\n    return <></>;\r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.col}>\r\n        {timetableTemplateData.slice(4).map((row, rowIndex) => {\r\n          return (\r\n            <div\r\n              className={styles.row}\r\n              key={`reserve-bubble-morning-${rowIndex}`}\r\n            >\r\n              {row.slice(2, 9).map((cell, cellIndex) => (\r\n                <Bubble\r\n                  cellContent={cell}\r\n                  row={rowIndex + 4}\r\n                  col={cellIndex + 2}\r\n                  key={`reserve-bubble-${rowIndex}-${cellIndex}`}\r\n                ></Bubble>\r\n              ))}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <span className={styles.separator}></span>\r\n      <div className={styles.col}>\r\n        {timetableTemplateData.slice(4).map((row, rowIndex) => {\r\n          return (\r\n            <div\r\n              className={styles.row}\r\n              key={`reserve-bubble-evening-${rowIndex}`}\r\n            >\r\n              {row.slice(9).map((cell, cellIndex) => (\r\n                <Bubble\r\n                  cellContent={cell}\r\n                  row={rowIndex + 4}\r\n                  col={cellIndex + 9}\r\n                  key={`reserve-bubble-${rowIndex}-${cellIndex}`}\r\n                ></Bubble>\r\n              ))}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReserveSlotsBubbles;\r\n","import ReserveSlotsTable from \"./ReserveSlotsTable\";\r\nimport ReserveSlotsBubbles from \"./ReserveSlotsBubbles\";\r\nimport styles from \"../css/ReserveSlots.module.css\";\r\nconst ReserveSlots = ({ reservedSlots, toggleReserve }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <ReserveSlotsBubbles\r\n        reservedSlots={reservedSlots}\r\n        toggleReserve={toggleReserve}\r\n      ></ReserveSlotsBubbles>\r\n      <ReserveSlotsTable\r\n        reservedSlots={reservedSlots}\r\n        toggleReserve={toggleReserve}\r\n      ></ReserveSlotsTable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReserveSlots;\r\n","import { useState } from \"react\";\r\nimport styles from \"../css/CampusToggle.module.css\";\r\nconst CampusToggle = () => {\r\n  const [selectedCampus, setSelectedCampus] = useState(\"VELLORE\");\r\n  return (\r\n    <div\r\n      className={`${styles.toggle} ${\r\n        selectedCampus === \"VELLORE\" ? styles.selected1 : styles.selected2\r\n      }`}\r\n    >\r\n      <div\r\n        onClick={(e) => {\r\n          const element = e?.target?.parentNode;\r\n          if (element?.classList.contains(styles.toggle)) {\r\n            element.classList.remove(styles.selected2);\r\n            element.classList.add(styles.selected1);\r\n          }\r\n        }}\r\n        className=\"body2-medium\"\r\n      >\r\n        VELLORE\r\n      </div>\r\n      <span></span>\r\n      <div\r\n        onClick={(e) => {\r\n          const element = e?.target?.parentNode;\r\n          if (element?.classList.contains(styles.toggle)) {\r\n            element.classList.remove(styles.selected1);\r\n            element.classList.add(styles.selected2);\r\n          }\r\n        }}\r\n        className=\"body2-medium\"\r\n      >\r\n        CHENNAI\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CampusToggle;\r\n","export default __webpack_public_path__ + \"static/media/searchIcon.709f9899.svg\";","import styles from \"../css/Searchbar.module.css\";\r\nimport searchIcon from \"../assets/searchIcon.svg\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Fuse from \"fuse.js\";\r\n\r\nconst Searchbar = ({\r\n  selector,\r\n  data,\r\n  getUnique,\r\n  resultString,\r\n  placeholder,\r\n  onSelect,\r\n  keys,\r\n  suggestionElement,\r\n  threshold = 0.6,\r\n  shouldSort,\r\n  maxResults = 10,\r\n}) => {\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [currentItem, setCurrentItem] = useState(0);\r\n  const fuse = new Fuse(data, {\r\n    keys: keys,\r\n    threshold: threshold,\r\n    shouldSort: shouldSort || true,\r\n  });\r\n  useEffect(() => {\r\n    // console.log(currentItem);\r\n  }, [currentItem]);\r\n\r\n  useEffect(() => {\r\n    const results = fuse.search(query);\r\n    setSuggestions(results.map((ele) => ele.item).slice(0, maxResults));\r\n  }, [query]);\r\n  return (\r\n    <div className={`${styles.container} ${styles.notFocused}`}>\r\n      <input\r\n        type=\"text\"\r\n        name=\"search\"\r\n        placeholder={placeholder}\r\n        className={styles.input}\r\n        id={selector}\r\n        onInput={(e) => {\r\n          setQuery(e.target.value);\r\n          setInputText(e.target.value);\r\n          setCurrentItem(-1);\r\n        }}\r\n        onFocus={(e) => {\r\n          e.target?.parentElement?.classList.remove(styles.notFocused);\r\n          setCurrentItem(-1);\r\n        }}\r\n        onBlur={(e) => {\r\n          e.target?.parentElement?.classList.add(styles.notFocused);\r\n          setSuggestions([]);\r\n          setCurrentItem(-1);\r\n          setInputText(\"\");\r\n          setQuery(\"\");\r\n        }}\r\n        onKeyDown={(e) => {\r\n          if (e.code === \"ArrowDown\") {\r\n            e.preventDefault();\r\n            setCurrentItem((prevItem) => {\r\n              if (prevItem + 1 < suggestions.length) {\r\n                ++prevItem;\r\n                setInputText(getUnique(suggestions[prevItem]));\r\n                return prevItem;\r\n              }\r\n              return prevItem;\r\n            });\r\n          } else if (e.code === \"ArrowUp\") {\r\n            e.preventDefault();\r\n            setCurrentItem((prevItem) => {\r\n              if (prevItem - 1 >= 0) {\r\n                --prevItem;\r\n                setInputText(getUnique(suggestions[prevItem]));\r\n                return prevItem;\r\n              }\r\n              return prevItem;\r\n            });\r\n          } else if (e.code === \"Enter\") {\r\n            // console.log(document.querySelector(`.${styles.current}`));\r\n            document.querySelector(`.${styles.current}`)?.click();\r\n            document.querySelector(`#${selector}`)?.blur();\r\n          }\r\n        }}\r\n        autoComplete=\"off\"\r\n        value={inputText}\r\n      ></input>\r\n      {query.length > 1 ? (\r\n        <div className={styles.suggestions}>\r\n          {suggestions.length > 0 ? (\r\n            suggestions.map((suggestion, index) => {\r\n              return suggestionElement(\r\n                suggestion,\r\n                `${styles.suggestion} ${\r\n                  currentItem >= 0 &&\r\n                  suggestions[currentItem] &&\r\n                  getUnique(suggestion) === getUnique(suggestions[currentItem])\r\n                    ? styles.current\r\n                    : \"\"\r\n                }`,\r\n                getUnique(suggestion),\r\n                onSelect,\r\n                `${selector}-${suggestion}-${index}`\r\n              );\r\n            })\r\n          ) : (\r\n            <div>No Results</div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Searchbar;\r\n","import styles from \"../css/Button.module.css\";\r\nconst Button = ({ children, ...allProps }) => {\r\n  let className = \"\";\r\n  if (allProps[\"type\"] === \"primary\") className = styles.primary;\r\n  if (allProps[\"type\"] === \"clear\") className = styles.clear;\r\n\r\n  return (\r\n    <a\r\n      className={`${styles.button} ${className} ${allProps[\"classes\"]}`}\r\n      {...allProps}\r\n    >\r\n      {children}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styles from \"../css/CourseSelect.module.css\";\r\nimport Searchbar from \"./Searchbar\";\r\nimport coursesData from \"../data/courses.json\";\r\nimport Button from \"./Button\";\r\n\r\nconst CourseSelect = ({\r\n  stageCourse,\r\n  unstageCourse,\r\n  getCourseID,\r\n  stagedCourses,\r\n  selectCourse,\r\n  deselectCourse,\r\n  selectedCourseID,\r\n}) => {\r\n  let filteredCourses = coursesData.filter(\r\n    (course) =>\r\n      stagedCourses.find(\r\n        (stagedCourse) => getCourseID(stagedCourse) === getCourseID(course)\r\n      ) === undefined\r\n  );\r\n  const seenCourses = new Set();\r\n  filteredCourses = filteredCourses.filter((course) => {\r\n    const duplicate = seenCourses.has(course[\"COURSE CODE\"]);\r\n    seenCourses.add(course[\"COURSE CODE\"]);\r\n    return !duplicate;\r\n  });\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.search}>\r\n        <div className={`${styles.title} body1-bold`}>Select Course</div>\r\n        <Searchbar\r\n          selector=\"course-select-autocomplete\"\r\n          data={filteredCourses}\r\n          keys={[\"COURSE CODE\", \"COURSE TITLE\"]}\r\n          onSelect={(selectedString) => {\r\n            console.log(\r\n              coursesData.filter((course) =>\r\n                selectedString.startsWith(course[\"COURSE CODE\"])\r\n              )\r\n            );\r\n            coursesData.forEach((course) => {\r\n              if (selectedString.startsWith(course[\"COURSE CODE\"]))\r\n                stageCourse(course);\r\n            });\r\n          }}\r\n          getUnique={(course) =>\r\n            `${course[\"COURSE CODE\"]} - ${course[\"COURSE TITLE\"]}`\r\n          }\r\n          placeholder=\"Eg: CSE1002 or Problem Solving and Programming\"\r\n          threshold={0.4}\r\n          suggestionElement={(course, classNames, value, onSelect, key) => {\r\n            return (\r\n              <div\r\n                className={`${styles.courseSuggestion} ${classNames}`}\r\n                data-value={value}\r\n                onClick={(e) => {\r\n                  onSelect(value);\r\n                }}\r\n                key={key}\r\n              >\r\n                <div>{course[\"COURSE CODE\"]}</div>\r\n                <div>{course[\"COURSE TITLE\"]}</div>\r\n              </div>\r\n            );\r\n          }}\r\n          maxResults={4}\r\n        ></Searchbar>\r\n      </div>\r\n      <div className={styles.stagedCourses}>\r\n        <div className={`${styles.title} body1-bold`}>Selected Courses</div>\r\n        <div className={styles.addedCourses}>\r\n          <div className={styles.resultsWrapper}>\r\n            <div className={styles.results}>\r\n              {stagedCourses.map((stagedCourse) => {\r\n                return (\r\n                  <div\r\n                    className={`${styles.course} ${\r\n                      getCourseID(stagedCourse) === selectedCourseID\r\n                        ? styles.selectedCourse\r\n                        : \"\"\r\n                    }`}\r\n                    key={`selected-course-${getCourseID(stagedCourse)}`}\r\n                    onClick={(e) => {\r\n                      selectCourse(stagedCourse);\r\n                    }}\r\n                  >\r\n                    <div className={`${styles.courseTitle} body1-bold`}>\r\n                      {stagedCourse[\"COURSE TITLE\"]}\r\n                    </div>\r\n                    <a\r\n                      className={styles.delete}\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        unstageCourse(stagedCourse);\r\n                        deselectCourse(stagedCourse);\r\n                      }}\r\n                    >\r\n                      X\r\n                    </a>\r\n                    <div className={styles.courseCode}>\r\n                      {stagedCourse[\"COURSE CODE\"]}\r\n                    </div>\r\n                    <div className={styles.courseType}>\r\n                      {stagedCourse[\"COURSE TYPE\"]}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className={styles.buttons}>\r\n            <Button\r\n              onClick={() =>\r\n                stagedCourses.forEach((course) => {\r\n                  unstageCourse(course);\r\n                  deselectCourse(course);\r\n                })\r\n              }\r\n              type=\"clear\"\r\n            >\r\n              CLEAR\r\n            </Button>\r\n            {/* <Button type=\"primary\">ADD COURSES</Button> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CourseSelect;\r\n","import styles from \"../css/ClassPreference.module.css\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport Button from \"./Button\";\r\nconst ClassPreference = ({ classes, removeClass, setReorderedClasses }) => {\r\n  const handleOnDragEnd = (result) => {\r\n    if (!result.destination) return;\r\n\r\n    const [reorderedItem] = classes.splice(result.source.index, 1);\r\n    classes.splice(result.destination.index, 0, reorderedItem);\r\n    setReorderedClasses(classes);\r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.classPriority}>\r\n        <div className={`${styles.title} body1-bold`}>Class Priority</div>\r\n        <div className={styles.addedClasses}>\r\n          <div className={styles.resultsWrapper}>\r\n            {classes?.length > 0 ? (\r\n              <DragDropContext onDragEnd={handleOnDragEnd}>\r\n                <Droppable droppableId=\"classes-priority-list\">\r\n                  {(provided) => (\r\n                    <ul\r\n                      key={\"classes-list\"}\r\n                      className={styles.classesList}\r\n                      ref={provided.innerRef}\r\n                      {...provided.droppableProps}\r\n                    >\r\n                      {classes?.map((classData, index) => {\r\n                        return (\r\n                          <Draggable\r\n                            draggableId={`${classData[\"CLASS ID\"]}-priority-select`}\r\n                            key={`${classData[\"CLASS ID\"]}-priority-select`}\r\n                            index={index}\r\n                          >\r\n                            {(provided) => (\r\n                              <li\r\n                                ref={provided.innerRef}\r\n                                key={`${classData[\"CLASS ID\"]}-priority-select-c`}\r\n                                className={`${styles.class}`}\r\n                                {...provided.draggableProps}\r\n                                {...provided.dragHandleProps}\r\n                              >\r\n                                <div\r\n                                  className={`${styles.facultyName} body1-bold`}\r\n                                >\r\n                                  {classData[\"EMPLOYEE NAME\"]}\r\n                                </div>\r\n                                <a\r\n                                  className={styles.delete}\r\n                                  onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    removeClass(classData);\r\n                                  }}\r\n                                >\r\n                                  X\r\n                                </a>\r\n                                <div className={styles.erpId}>\r\n                                  {classData[\"ERP ID\"]}\r\n                                </div>\r\n                                <div className={styles.classSlots}>\r\n                                  {classData[\"SLOT\"]}\r\n                                </div>\r\n                              </li>\r\n                            )}\r\n                          </Draggable>\r\n                        );\r\n                      })}\r\n                      {provided.placeholder}\r\n                    </ul>\r\n                  )}\r\n                </Droppable>\r\n              </DragDropContext>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {/* {classes?.map((classData) => {\r\n              return (\r\n                <div\r\n                  className={styles.class}\r\n                  key={`selected-class-${classData[\"CLASS ID\"]}`}\r\n                ></div>\r\n              );\r\n            })} */}\r\n          </div>\r\n          <Button\r\n            classes={styles.addClassesButton}\r\n            type=\"primary\"\r\n            href=\"#class-selection-section\"\r\n          >\r\n            ADD CLASSES +\r\n          </Button>\r\n          <div className={styles.buttons}>\r\n            <Button\r\n              type=\"clear\"\r\n              onClick={() => {\r\n                classes.forEach((classData) => removeClass(classData));\r\n              }}\r\n            >\r\n              CLEAR\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClassPreference;\r\n","import timetableTemplateData from \"./timetableTemplateData\";\r\n\r\nconst mapping = {};\r\n\r\n/**\r\n *\r\n * @param {object} course Preferably object containing course info, but any object with \"COURSE CODE\" and \"COURSE TYPE\" fields should work.\r\n * @returns {string} Unique identifier for object passed in by joining courseCode and courseType with a hyphen, eg:- CHY1701-ETH\r\n */\r\nconst getCourseID = (course) => {\r\n  return `${course[\"COURSE CODE\"]}-${course[\"COURSE TYPE\"]}`;\r\n};\r\n\r\nconst verifyPreferencesSet = (courseIDs, classes) => {\r\n  if (courseIDs.length === 0) {\r\n    alert(`Please select at least one course.`);\r\n    return false;\r\n  }\r\n  const unsetCourses = [];\r\n  courseIDs.forEach((courseID) => {\r\n    if (classes[courseID] === undefined || classes[courseID].length === 0)\r\n      unsetCourses.push(courseID);\r\n  });\r\n  if (unsetCourses.length > 0) {\r\n    alert(\r\n      `Please add at least one class for each course.\r\n        Courses with no classes added yet: ${unsetCourses.join(\", \")}`\r\n    );\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nconst getSlotMapping = () => {\r\n  Object.keys(mapping).forEach((key) => delete mapping[key]);\r\n  const data = timetableTemplateData;\r\n  for (let rowNo = 4; rowNo + 1 < data.length; rowNo += 2) {\r\n    for (let colNo = 2; colNo < data[rowNo].length; colNo++) {\r\n      const pattern = /[A-Z]+\\d+/;\r\n      const slotA = data[rowNo][colNo];\r\n      const slotB = data[rowNo + 1][colNo];\r\n      if (pattern.test(slotA) && pattern.test(slotB)) {\r\n        if (mapping[slotA] === undefined) mapping[slotA] = [];\r\n        if (mapping[slotB] === undefined) mapping[slotB] = [];\r\n        mapping[slotA].push(slotB);\r\n        mapping[slotB].push(slotA);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst getNumberOfTotalPossibleSelections = (classes) => {\r\n  let first = true;\r\n  if (classes !== undefined) {\r\n    const keysArray = Object.keys(classes);\r\n    if (keysArray.length > 0)\r\n      return keysArray.reduce((total, key) => {\r\n        if (first) {\r\n          first = false;\r\n          return classes[Object.keys(classes)[0]].length * classes[key].length;\r\n        }\r\n        return total * classes[key].length;\r\n      });\r\n    else return 0;\r\n  }\r\n};\r\n\r\nconst verifyNumberOfClasses = (courseIDs, classes) => {\r\n  let courseIDWithTooFewClasses;\r\n\r\n  if (\r\n    courseIDs.find((courseID) => {\r\n      courseIDWithTooFewClasses = courseID;\r\n      return classes[courseID] === undefined || classes[courseID].length === 0;\r\n    })\r\n    // Object.keys(classes).find((courseID) => {\r\n    //   courseIDWithTooFewClasses = courseID;\r\n    //   return classes[courseID].length === 0;\r\n    // })\r\n  ) {\r\n    alert(\r\n      `No valid classes found for ${courseIDWithTooFewClasses}\\n` +\r\n        `Please either reduce reserved slots or add more classes with different slots from this course`\r\n    );\r\n    return false;\r\n  }\r\n\r\n  const numberOfPossibilities = getNumberOfTotalPossibleSelections(classes);\r\n  if (numberOfPossibilities > 200_000_000) {\r\n    const minutes = numberOfPossibilities / 50_000_000;\r\n    return confirm(\r\n      `Number of Possibilities: ${numberOfPossibilities.toLocaleString()}\\n` +\r\n        `Time required: (approx) ${minutes.toLocaleString()} minutes (Actual time required might be much less)\\n` +\r\n        // `If you get a message saying \"Page Unresponsive\" after choosing to proceed, please choose to wait.\\n` +\r\n        `To reduce possibilities, reduce the number of classes selected or reserve more slots\\n` +\r\n        `Proceed?`\r\n    );\r\n  }\r\n  return true;\r\n};\r\n\r\nconst removeReservedSlots = (classes, reservedSlots) => {\r\n  const newClasses = JSON.parse(JSON.stringify(classes));\r\n  for (const courseID of Object.keys(newClasses)) {\r\n    newClasses[courseID] = newClasses[courseID].filter((classToBeChecked) => {\r\n      return (\r\n        classToBeChecked[\"SLOT\"].split(\"+\").find((slot) => {\r\n          if (reservedSlots.includes(slot)) return reservedSlots.includes(slot);\r\n        }) === undefined\r\n      );\r\n    });\r\n  }\r\n\r\n  return newClasses;\r\n};\r\n\r\nconst populateSlotCombination = async (\r\n  classes,\r\n  reservedSlots,\r\n  slotsString,\r\n  objectToPopulate\r\n) => {\r\n  if (window.Worker) {\r\n    const worker = new Worker(\"workers/worker.js\");\r\n\r\n    getSlotMapping();\r\n\r\n    const courseIDs = Object.keys(classes);\r\n    // let classes = await getClasses(faculties);\r\n    classes = removeReservedSlots(classes, reservedSlots);\r\n\r\n    // sorting courseIDs in ascending order of the number of classes\r\n    // with that courseID.\r\n    // This is done so that backtracking algorithm will terminate quicker\r\n    // in case some mistake is found.\r\n    courseIDs.sort((courseIDa, courseIDb) => {\r\n      return classes[courseIDa].length - classes[courseIDb].length;\r\n    });\r\n\r\n    const requestWorker = (\r\n      courseIDs,\r\n      classes,\r\n      slotCombinationString,\r\n      possibleSlotCombinations\r\n    ) =>\r\n      new Promise((res, rej) => {\r\n        const channel = new MessageChannel();\r\n\r\n        channel.port1.onmessage = ({ data }) => {\r\n          // console.log(JSON.stringify(data));\r\n          console.log(data);\r\n          channel.port1.close();\r\n          if (data.error) {\r\n            rej(data.error);\r\n          } else {\r\n            res(data.result);\r\n          }\r\n        };\r\n\r\n        worker.postMessage(\r\n          [\r\n            \"populateSlotCombination\",\r\n            mapping,\r\n            courseIDs,\r\n            classes,\r\n            slotCombinationString,\r\n            possibleSlotCombinations,\r\n          ],\r\n          [channel.port2]\r\n        );\r\n      });\r\n\r\n    console.time(\"populateSlotCombination\");\r\n    const populatedSlotCombination = await requestWorker(\r\n      courseIDs,\r\n      classes,\r\n      slotsString,\r\n      objectToPopulate\r\n    );\r\n    console.timeEnd(\"populateSlotCombination\");\r\n    return populatedSlotCombination;\r\n  }\r\n  return {};\r\n};\r\nconst getSlotCombinations = async (classes, reservedSlots) => {\r\n  console.log(classes, reservedSlots);\r\n  if (window.Worker) {\r\n    const worker = new Worker(\"workers/worker.js\");\r\n\r\n    getSlotMapping();\r\n\r\n    const courseIDs = Object.keys(classes);\r\n    // let classes = await getClasses(faculties);\r\n\r\n    if (!verifyPreferencesSet(courseIDs, classes)) return {};\r\n\r\n    classes = removeReservedSlots(classes, reservedSlots);\r\n    if (!verifyNumberOfClasses(courseIDs, classes)) return {};\r\n\r\n    // sorting courseIDs in ascending order of the number of classes\r\n    // with that courseID.\r\n    // This is done so that backtracking algorithm will terminate quicker\r\n    // in case some mistake is found.\r\n    courseIDs.sort((courseIDa, courseIDb) => {\r\n      return classes[courseIDa].length - classes[courseIDb].length;\r\n    });\r\n\r\n    console.log(\r\n      \"All Possible Selections:\",\r\n      getNumberOfTotalPossibleSelections(classes)\r\n    );\r\n\r\n    const requestWorker = (mapping, courseIDs, classes) =>\r\n      new Promise((res, rej) => {\r\n        const channel = new MessageChannel();\r\n\r\n        channel.port1.onmessage = ({ data }) => {\r\n          // console.log(data);\r\n          channel.port1.close();\r\n          if (data.error) {\r\n            rej(data.error);\r\n          } else {\r\n            res(data.result);\r\n          }\r\n        };\r\n\r\n        worker.postMessage(\r\n          [\"getSlotCombinations\", mapping, courseIDs, classes],\r\n          [channel.port2]\r\n        );\r\n      });\r\n\r\n    console.time(\"getSlotCombinations\");\r\n    const possibleSlotCombinations = await requestWorker(\r\n      mapping,\r\n      courseIDs,\r\n      classes\r\n    );\r\n    const possibleSlotCombinationsObject = {};\r\n    possibleSlotCombinations.forEach(\r\n      (slotCombination) =>\r\n        (possibleSlotCombinationsObject[slotCombination.join(\"+\")] = [])\r\n    );\r\n    console.timeEnd(\"getSlotCombinations\");\r\n    return possibleSlotCombinationsObject;\r\n  }\r\n  return {};\r\n};\r\n\r\n/**\r\n *\r\n * @param {Object} courses Object of type {courseID: [Array of classes with this courseID]}\r\n * @param {Object} faculties Object of type {courseID: [Faculties teaching this course sorted by preference]}\r\n * @param {Array} reservedSlots Contains slots to be excluded while making timetables\r\n * @returns {Object} Object in the format {slots: [All schedules occupying those slots]}\r\n */\r\nconst getTimetables = async (classes, reservedSlots) => {\r\n  if (window.Worker) {\r\n    const worker = new Worker(\"workers/worker.js\");\r\n\r\n    getSlotMapping();\r\n\r\n    const courseIDs = Object.keys(classes);\r\n    // let classes = await getClasses(faculties);\r\n\r\n    if (!verifyPreferencesSet(courseIDs, classes)) return [];\r\n\r\n    classes = removeReservedSlots(classes, reservedSlots);\r\n    if (!verifyNumberOfClasses(courseIDs, classes)) return [];\r\n\r\n    // sorting courseIDs in ascending order of the number of classes\r\n    // with that courseID.\r\n    // This is done so that backtracking algorithm will terminate quicker\r\n    // in case some mistake is found.\r\n    courseIDs.sort((courseIDa, courseIDb) => {\r\n      return classes[courseIDa].length - classes[courseIDb].length;\r\n    });\r\n\r\n    // console.log(\r\n    //   \"All Possible Selections:\",\r\n    //   getNumberOfTotalPossibleSelections(classes)\r\n    // );\r\n    // using code from https://advancedweb.hu/how-to-use-async-await-with-postmessage/\r\n    // to use async await with worker.\r\n    const selectClasses = (mapping, courseIDs, classes) =>\r\n      new Promise((res, rej) => {\r\n        const channel = new MessageChannel();\r\n\r\n        channel.port1.onmessage = ({ data }) => {\r\n          console.log(data);\r\n          channel.port1.close();\r\n          if (data.error) {\r\n            rej(data.error);\r\n          } else {\r\n            res(data.result);\r\n          }\r\n        };\r\n\r\n        worker.postMessage(\r\n          [\"selectClasses\", mapping, courseIDs, classes],\r\n          [channel.port2]\r\n        );\r\n      });\r\n    const getSlotCombinations = (mapping, courseIDs, classes) =>\r\n      new Promise((res, rej) => {\r\n        const channel = new MessageChannel();\r\n\r\n        channel.port1.onmessage = ({ data }) => {\r\n          // console.log(data);\r\n          channel.port1.close();\r\n          if (data.error) {\r\n            rej(data.error);\r\n          } else {\r\n            res(data.result);\r\n          }\r\n        };\r\n\r\n        worker.postMessage(\r\n          [\"getSlotCombinations\", mapping, courseIDs, classes],\r\n          [channel.port2]\r\n        );\r\n      });\r\n    const populateSlotCombination = (\r\n      courseIDs,\r\n      classes,\r\n      slotCombinationString,\r\n      possibleSlotCombinations\r\n    ) =>\r\n      new Promise((res, rej) => {\r\n        const channel = new MessageChannel();\r\n\r\n        channel.port1.onmessage = ({ data }) => {\r\n          // console.log(data);\r\n          channel.port1.close();\r\n          if (data.error) {\r\n            rej(data.error);\r\n          } else {\r\n            res(data.result);\r\n          }\r\n        };\r\n\r\n        worker.postMessage(\r\n          [\r\n            \"populateSlotCombination\",\r\n            courseIDs,\r\n            classes,\r\n            slotCombinationString,\r\n            possibleSlotCombinations,\r\n          ],\r\n          [channel.port2]\r\n        );\r\n      });\r\n    console.time(\"getSlotCombinations\");\r\n    const possibleSlotCombinations = await getSlotCombinations(\r\n      mapping,\r\n      courseIDs,\r\n      classes\r\n    );\r\n    console.timeEnd(\"getSlotCombinations\");\r\n    console.time(\"selectClasses\");\r\n    const possibleClassSelections = await selectClasses(\r\n      mapping,\r\n      courseIDs,\r\n      classes\r\n    );\r\n    console.timeEnd(\"selectClasses\");\r\n\r\n    // console.log(\"Possible slot combinations\", possibleSlotCombinations);\r\n    let first = true;\r\n    if (Object.keys(possibleClassSelections).length > 0);\r\n    else\r\n      // Remove the semicolon at the end of the if statement when you uncomment this\r\n      // console.log(\r\n      //   \"all possible class selections\",\r\n      //   possibleClassSelections,\r\n      //   \"Groups:\",\r\n      //   Object.keys(possibleClassSelections).length,\r\n      //   \"Possible Schedules:\",\r\n      //   Object.keys(possibleClassSelections).reduce((total, key) => {\r\n      //     if (first) {\r\n      //       first = false;\r\n      //       return (\r\n      //         possibleClassSelections[Object.keys(possibleClassSelections)[0]]\r\n      //           .length + possibleClassSelections[key].length\r\n      //       );\r\n      //     }\r\n      //     return total + possibleClassSelections[key].length;\r\n      //   })\r\n      // );\r\n      alert(\"No valid schedules found.\");\r\n\r\n    const actualSlotCombinations = Object.keys(possibleClassSelections);\r\n    const possibleSlotCombinationStrings = possibleSlotCombinations.map(\r\n      (slotCombination) => slotCombination.join(\"+\")\r\n    );\r\n\r\n    const possibleSlotCombinationsObject = {};\r\n    possibleSlotCombinationStrings.forEach(\r\n      (slotCombination) =>\r\n        (possibleSlotCombinationsObject[slotCombination] = [])\r\n    );\r\n\r\n    const missedSlotCombinations = [];\r\n    const impossibleSlotCombinations = [];\r\n\r\n    actualSlotCombinations.forEach((slotCombination) => {\r\n      if (!possibleSlotCombinationStrings.includes(slotCombination))\r\n        missedSlotCombinations.push(slotCombination);\r\n    });\r\n    possibleSlotCombinationStrings.forEach((slotCombination) => {\r\n      if (!actualSlotCombinations.includes(slotCombination))\r\n        impossibleSlotCombinations.push(slotCombination);\r\n    });\r\n    // console.log(\r\n    //   \"Possible Slot combinations\",\r\n    //   possibleSlotCombinationsObject,\r\n    //   \"Missed Slot Combinations\",\r\n    //   missedSlotCombinations,\r\n    //   \"Impossible Slot Combinations\",\r\n    //   impossibleSlotCombinations\r\n    // );\r\n\r\n    console.time(\"populatedSlotCombination\");\r\n    const populatedSlotCombinationsObject = await populateSlotCombination(\r\n      courseIDs,\r\n      classes,\r\n      possibleSlotCombinationStrings[0],\r\n      possibleSlotCombinationsObject\r\n    );\r\n    // console.log(\r\n    //   \"Actual Schedules\",\r\n    //   possibleClassSelections[possibleSlotCombinationStrings[0]],\r\n    //   \"Possible Schedules\",\r\n    //   populatedSlotCombinationsObject[possibleSlotCombinationStrings[0]]\r\n    // );\r\n    console.timeEnd(\"populatedSlotCombination\");\r\n\r\n    return possibleClassSelections;\r\n  }\r\n  return [];\r\n};\r\n\r\nexport {\r\n  getTimetables,\r\n  getCourseID,\r\n  getSlotCombinations,\r\n  populateSlotCombination,\r\n};\r\n","import styles from \"../css/ClassSelect.module.css\";\r\nimport facultiesData from \"../data/faculties.json\";\r\nimport classesData from \"../data/classes.json\";\r\nimport { getCourseID } from \"../utils/generalUtils\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Fuse from \"fuse.js\";\r\nconst FacultySelect = ({ selectedCourseID, addClass, selectedClasses }) => {\r\n  const defaultQuery = {\r\n    searchQuery: \"\",\r\n    slots: \"\",\r\n  };\r\n  const [query, setQuery] = useState(defaultQuery);\r\n  const [classesToDisplay, setClassesToDisplay] = useState([]);\r\n  let filteredClasses = classesData.filter(\r\n    (classData) => getCourseID(classData) === selectedCourseID\r\n  );\r\n  const completeFilteredClasses = [];\r\n  let filteredFaculties = facultiesData.filter((faculty) =>\r\n    filteredClasses.find((classData) => {\r\n      return classData[\"ERP ID\"] === faculty[\"ERP ID\"];\r\n    })\r\n  );\r\n  for (const classData of filteredClasses) {\r\n    for (const faculty of filteredFaculties) {\r\n      if (classData[\"ERP ID\"] === faculty[\"ERP ID\"]) {\r\n        completeFilteredClasses.push({\r\n          ...classData,\r\n          \"EMPLOYEE NAME\": faculty[\"EMPLOYEE NAME\"],\r\n        });\r\n        continue;\r\n      }\r\n    }\r\n  }\r\n  const availableSlots = new Set();\r\n  for (const classData of completeFilteredClasses)\r\n    availableSlots.add(classData[\"SLOT\"]);\r\n\r\n  const fuse = new Fuse(completeFilteredClasses, {\r\n    keys: [\"ERP ID\", \"EMPLOYEE NAME\"],\r\n    shouldSort: true,\r\n    threshold: 0.2,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setQuery(defaultQuery);\r\n  }, [selectedCourseID]);\r\n\r\n  useEffect(() => {\r\n    const results =\r\n      query.searchQuery.length > 1\r\n        ? fuse.search(query.searchQuery).map((result) => result.item)\r\n        : completeFilteredClasses;\r\n    setClassesToDisplay(\r\n      results.filter(\r\n        (completeFilteredClass) =>\r\n          query.slots.length <= 1 ||\r\n          completeFilteredClass[\"SLOT\"] === query.slots\r\n      )\r\n    );\r\n  }, [query]);\r\n  return (\r\n    <div className={styles.container} id=\"class-selection-section\">\r\n      <div className={styles.queryRow}>\r\n        <div className={styles.search}>\r\n          <label\r\n            htmlFor=\"faculty-search\"\r\n            className={`${styles.title} body1-bold`}\r\n          >\r\n            Search by Faculty\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"faculty-search\"\r\n            name=\"faculty-search\"\r\n            value={query.searchQuery}\r\n            onInput={(e) => {\r\n              setQuery((prevQuery) => {\r\n                const obj = {};\r\n                obj.slots = prevQuery.slots;\r\n                obj.searchQuery = e.target.value;\r\n                return obj;\r\n              });\r\n            }}\r\n            placeholder=\"Eg. 14494 or AKHILA MAHESWARI M\"\r\n          />\r\n        </div>\r\n        <div className={styles.slots}>\r\n          <label\r\n            htmlFor=\"faculty-slots-filter\"\r\n            className={`${styles.title} body1-bold`}\r\n          >\r\n            Filter classes by slots\r\n          </label>\r\n          <select\r\n            name=\"faculty-slots-filter\"\r\n            id=\"faculty-slots-filter\"\r\n            value={query.slots.length > 1 ? query.slots : \"\"}\r\n            onChange={(e) =>\r\n              setQuery((prevQuery) => {\r\n                return {\r\n                  slots: e.target.value,\r\n                  searchQuery: prevQuery.searchQuery,\r\n                };\r\n              })\r\n            }\r\n          >\r\n            <option value=\"\">Any Slot</option>\r\n            {Array.from(availableSlots)\r\n              .sort((a, b) => {\r\n                let result = 0;\r\n                if (a.length > b.length) result += 5;\r\n                else if (a.length < b.length) result -= 5;\r\n\r\n                if (a > b) result += 1;\r\n                else if (a < b) result -= 1;\r\n                return result;\r\n              })\r\n              .map((slot) => {\r\n                return (\r\n                  <option value={slot} key={`faculty-filter-${slot}`}>\r\n                    {slot}\r\n                  </option>\r\n                );\r\n              })}\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className={styles.resultsWrapper}>\r\n        <div className={styles.results}>\r\n          {classesToDisplay\r\n            .filter(\r\n              (classData) =>\r\n                selectedClasses[selectedCourseID]?.find(\r\n                  (_classData) =>\r\n                    classData[\"CLASS ID\"] === _classData[\"CLASS ID\"]\r\n                ) === undefined\r\n            )\r\n            .sort((a, b) => {\r\n              let result = 0;\r\n              if (a[\"EMPLOYEE NAME\"] > b[\"EMPLOYEE NAME\"]) result += 10;\r\n              else if (a[\"EMPLOYEE NAME\"] < b[\"EMPLOYEE NAME\"]) result -= 10;\r\n\r\n              if (a[\"SLOT\"].length > b[\"SLOT\"].length) result += 5;\r\n              else if (a[\"SLOT\"].length < b[\"SLOT\"].length) result -= 5;\r\n\r\n              if (a[\"SLOT\"] > b[\"SLOT\"]) result += 1;\r\n              else if (a[\"SLOT\"] < b[\"SLOT\"]) result -= 1;\r\n              return result;\r\n            })\r\n            .map((classData) => {\r\n              return (\r\n                <div\r\n                  className={`${styles.class}`}\r\n                  key={`class-select-${getCourseID(classData)}-${\r\n                    classData[\"ERP ID\"]\r\n                  }-${classData[\"SLOT\"]}-${classData[\"CLASS ID\"]}`}\r\n                >\r\n                  <div className={`${styles.facultyName} body1-bold`}>\r\n                    {classData[\"EMPLOYEE NAME\"]}\r\n                  </div>\r\n                  <a\r\n                    className={styles.add}\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      addClass(classData);\r\n                    }}\r\n                  >\r\n                    +\r\n                  </a>\r\n                  <div className={styles.erpId}>{classData[\"ERP ID\"]}</div>\r\n                  <div className={styles.classSlots}>\r\n                    {classData[\"SLOT\"]?.split(\"+\").map((slot, index) => (\r\n                      <>\r\n                        {index !== 0 ? \"+\" : \"\"}\r\n                        {slot}\r\n                        <wbr />\r\n                      </>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default FacultySelect;\r\n","import { useEffect, useState } from \"react\";\r\nimport styles from \"../css/Options.module.css\";\r\n// import AvailableCoursesList from \"./AvailableCoursesList\";\r\n// import FacultiesPreferenceList from \"./FacultiesPreferenceList\";\r\n// import SelectedCoursesList from \"./SelectedCoursesList\";\r\n// import Instructions from \"./Instructions\";\r\n// import InitialSelect from \"./InitialSelect\";\r\nimport ReserveSlots from \"./ReserveSlots\";\r\nimport CampusToggle from \"./CampusToggle\";\r\nimport CourseSelect from \"./CourseSelect\";\r\nimport ClassPreference from \"./ClassPreference\";\r\nimport ClassSelect from \"./ClassSelect\";\r\nimport Button from \"./Button\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { getCourseID } from \"../utils/generalUtils\";\r\n\r\nconst Options = ({ generateTimetables, selectSlots }) => {\r\n  const [reservedSlots, setReservedSlots] = useState([]);\r\n\r\n  const [stagedCourses, setStagedCourses] = useState([]);\r\n  const [selectedClasses, setSelectedClasses] = useState({});\r\n  // const [selectedFaculties, setSelectedFaculties] = useState({});\r\n  const [currentlySelectedCourseID, setCurrentlySelectedCourseID] =\r\n    useState(\"\");\r\n\r\n  useEffect(() => {\r\n    console.log(selectedClasses);\r\n  }, [selectedClasses]);\r\n  useEffect(() => {\r\n    setSelectedClasses((prevSelectedClasses) => {\r\n      const obj = { ...prevSelectedClasses };\r\n      stagedCourses.forEach((stagedCourse) => {\r\n        const courseID = getCourseID(stagedCourse);\r\n        if (obj[courseID] === undefined) obj[courseID] = [];\r\n      });\r\n      const courseIDs = Object.keys(obj);\r\n      courseIDs.forEach((courseID) => {\r\n        if (\r\n          stagedCourses.find((course) => getCourseID(course) === courseID) ===\r\n          undefined\r\n        )\r\n          delete obj[courseID];\r\n      });\r\n      return obj;\r\n    });\r\n  }, [stagedCourses]);\r\n\r\n  const toggleReserve = (slot) => {\r\n    const pattern = /[A-Z]+\\d+/;\r\n    if (pattern.test(slot)) {\r\n      if (reservedSlots.includes(slot)) {\r\n        setReservedSlots((prevReservedSlots) =>\r\n          prevReservedSlots.filter(\r\n            (slotToBeChecked) => slotToBeChecked !== slot\r\n          )\r\n        );\r\n      } else {\r\n        setReservedSlots((prevReservedSlots) => [...prevReservedSlots, slot]);\r\n      }\r\n    }\r\n  };\r\n  const stageCourse = (course) => {\r\n    // try {\r\n    //   let res = await axios.get(`/courses?courseID=${courseID}`);\r\n    //   if (res.data !== undefined) {\r\n    //     const course = res.data;\r\n    //     setSelectedCourses((prevSelectedCourses) => [\r\n    //       ...prevSelectedCourses.filter(\r\n    //         (prevCourse) => getCourseID(prevCourse) !== getCourseID(course)\r\n    //       ),\r\n    //       course,\r\n    //     ]);\r\n    //   }\r\n    // } catch (error) {\r\n    //   console.error(error);\r\n    // }\r\n    setStagedCourses((prevSelectedCourses) => [\r\n      ...prevSelectedCourses.filter(\r\n        (prevCourse) => getCourseID(prevCourse) !== getCourseID(course)\r\n      ),\r\n      course,\r\n    ]);\r\n    // setSelectedClasses((prevSelectedClasses) => {\r\n    //   let obj;\r\n    //   obj = { ...prevSelectedClasses };\r\n    //   if (prevSelectedClasses[getCourseID(course)] === undefined) {\r\n    //     prevSelectedClasses[getCourseID(course)] = [];\r\n    //   }\r\n    //   return obj;\r\n    // });\r\n  };\r\n\r\n  const unstageCourse = (object) => {\r\n    let courseID;\r\n    if (typeof object === \"string\") courseID = object;\r\n    else courseID = getCourseID(object);\r\n    setStagedCourses((prevSelectedCourses) =>\r\n      prevSelectedCourses.filter((course) => courseID !== getCourseID(course))\r\n    );\r\n\r\n    // setSelectedClasses((prevSelectedClasses) => {\r\n    //   const obj = { ...prevSelectedClasses };\r\n    //   delete obj[courseID];\r\n    //   return obj;\r\n    // });\r\n  };\r\n\r\n  const selectCourse = (object) => {\r\n    let courseID;\r\n    if (typeof object === \"string\") courseID = object;\r\n    else courseID = getCourseID(object);\r\n    setCurrentlySelectedCourseID(courseID);\r\n  };\r\n\r\n  const deselectCourse = (object) => {\r\n    let courseID;\r\n    if (typeof object === \"string\") courseID = object;\r\n    else courseID = getCourseID(object);\r\n    if (courseID === currentlySelectedCourseID || courseID === undefined)\r\n      setCurrentlySelectedCourseID(\"\");\r\n  };\r\n\r\n  const addClass = (classData) => {\r\n    setSelectedClasses((prevSelectedClasses) => {\r\n      const obj = { ...prevSelectedClasses };\r\n      if (obj[currentlySelectedCourseID] === undefined)\r\n        obj[currentlySelectedCourseID] = [];\r\n      if (\r\n        obj[currentlySelectedCourseID].find(\r\n          (_classData) => _classData[\"CLASS ID\"] === classData[\"CLASS ID\"]\r\n        ) === undefined\r\n      )\r\n        obj[currentlySelectedCourseID].push(classData);\r\n      return obj;\r\n    });\r\n  };\r\n\r\n  const removeClass = (classData) => {\r\n    setSelectedClasses((prevSelectedClasses) => {\r\n      const obj = { ...prevSelectedClasses };\r\n      obj[currentlySelectedCourseID] = obj[currentlySelectedCourseID].filter(\r\n        (_classData) => classData[\"CLASS ID\"] !== _classData[\"CLASS ID\"]\r\n      );\r\n      return obj;\r\n    });\r\n  };\r\n\r\n  const setReorderedClasses = (reorderedClasses) => {\r\n    setSelectedClasses((prevSelectedClasses) => {\r\n      const obj = { ...prevSelectedClasses };\r\n      obj[currentlySelectedCourseID] = reorderedClasses;\r\n      return obj;\r\n    });\r\n  };\r\n\r\n  // const finalizeAll = () => {\r\n\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <CampusToggle></CampusToggle>\r\n      <div\r\n        className={`${styles.sectionTitle} heading2`}\r\n        id=\"reserve-slots-section\"\r\n      >\r\n        <div className={styles.title}>Reserve your Slots</div>\r\n        <div className={styles.btns}>\r\n          <a\r\n            className={`${styles.btn} body1-medium`}\r\n            onClick={() => {\r\n              reservedSlots.forEach((slot) => toggleReserve(slot));\r\n            }}\r\n          >\r\n            Clear\r\n          </a>\r\n          <a\r\n            className={`${styles.btn} body1-medium`}\r\n            href=\"#add-courses-section\"\r\n          >\r\n            Skip\r\n          </a>\r\n        </div>\r\n      </div>\r\n\r\n      <ReserveSlots\r\n        reservedSlots={reservedSlots}\r\n        toggleReserve={toggleReserve}\r\n      ></ReserveSlots>\r\n      <div\r\n        className={`${styles.sectionTitle} heading2`}\r\n        id=\"add-courses-section\"\r\n      >\r\n        <div className={styles.title}>Add courses</div>\r\n      </div>\r\n\r\n      <div className={styles.coursePreferences}>\r\n        <CourseSelect\r\n          stageCourse={stageCourse}\r\n          unstageCourse={unstageCourse}\r\n          getCourseID={getCourseID}\r\n          stagedCourses={stagedCourses}\r\n          selectCourse={selectCourse}\r\n          deselectCourse={deselectCourse}\r\n          selectedCourseID={currentlySelectedCourseID}\r\n        ></CourseSelect>\r\n        <ClassPreference\r\n          classes={selectedClasses[currentlySelectedCourseID]}\r\n          removeClass={removeClass}\r\n          setReorderedClasses={setReorderedClasses}\r\n        ></ClassPreference>\r\n      </div>\r\n      <ClassSelect\r\n        selectedCourseID={currentlySelectedCourseID}\r\n        addClass={addClass}\r\n        selectedClasses={selectedClasses}\r\n      ></ClassSelect>\r\n      <Button\r\n        classes={styles.generateTimetablesButton}\r\n        type=\"primary\"\r\n        onClick={async () => {\r\n          await generateTimetables(selectedClasses, reservedSlots);\r\n          selectSlots([]);\r\n          document\r\n            .querySelector(\"#timetable-previews\")\r\n            ?.scrollIntoView({ behavior: \"smooth\" });\r\n        }}\r\n      >\r\n        Generate Timetables\r\n      </Button>\r\n    </>\r\n  );\r\n  // return (\r\n  // <div className={styles.screen}>\r\n  //   <div className={styles.row}>\r\n  //     <Instructions></Instructions>\r\n  //     <InitialSelect></InitialSelect>\r\n  //   </div>\r\n  //   {/* <div className={styles.selectionTablesRow}> */}\r\n  //   <div className={styles.row}>\r\n  //     <AvailableCoursesList\r\n  //       addCourse={addCourse}\r\n  //       selectedCourses={selectedCourses}\r\n  //       getCourseID={getCourseID}\r\n  //     ></AvailableCoursesList>\r\n  //     <SelectedCoursesList\r\n  //       removeCourse={removeCourse}\r\n  //       onSelect={selectCourse}\r\n  //       onDeselect={deselectCourse}\r\n  //       getCourseID={getCourseID}\r\n  //       selectedCourses={selectedCourses}\r\n  //     ></SelectedCoursesList>\r\n  //     <FacultiesPreferenceList\r\n  //       currentlySelectedCourseID={currentlySelectedCourseID}\r\n  //       selectedFaculties={selectedFaculties}\r\n  //       setSelectedFaculties={setSelectedFaculties}\r\n  //       getCourseID={getCourseID}\r\n  //     ></FacultiesPreferenceList>\r\n  //   </div>\r\n  //   <div className={styles.row}>\r\n  //     <ReserveSlots\r\n  //       reservedSlots={reservedSlots}\r\n  //       toggleReserve={toggleReserve}\r\n  //     ></ReserveSlots>\r\n  //   </div>\r\n  //   <div className={styles.row}>\r\n  //     <button\r\n  //       className={styles.submitBtn}\r\n  //       onClick={async () => {\r\n  //         console.log(\"CLICKED\");\r\n  //         await generateTimetables(\r\n  //           selectedCourses,\r\n  //           selectedFaculties,\r\n  //           reservedSlots\r\n  //         );\r\n  //         selectSlots([]);\r\n  //         document\r\n  //           .querySelector(\"#timetable-previews\")\r\n  //           ?.scrollIntoView({ behavior: \"smooth\" });\r\n  //       }}\r\n  //     >\r\n  //       Generate Timetables\r\n  //     </button>\r\n  //   </div>\r\n  // </div>\r\n  // );\r\n};\r\n\r\nexport default Options;\r\n","import styles from \"../css/Timetable.module.css\";\r\nimport timetableTemplateData from \"../utils/timetableTemplateData\";\r\nconst TimetablePreview = ({ slots, id, select }) => {\r\n  let dayCount = 0;\r\n  const getClassName = (cellContent, rowIndex, cellIndex) => {\r\n    let className = `${styles.cell} `;\r\n    if (cellIndex < 2) {\r\n      className += `${styles.headDay}`;\r\n      return className;\r\n    }\r\n    if (rowIndex < 2) {\r\n      className += ` ${styles.theoryTiming} `;\r\n    }\r\n    if (rowIndex >= 2 && rowIndex < 4) {\r\n      className += ` ${styles.labTiming} `;\r\n    }\r\n    if (rowIndex < 4) {\r\n      className += ` ${styles.cell} ${styles.headTop} `;\r\n      return className;\r\n    }\r\n    if (cellContent === \"Lunch\") {\r\n      className += `${styles.lunch}`;\r\n      return className;\r\n    }\r\n    if (slots.includes(cellContent)) {\r\n      if (rowIndex % 2 === 0) {\r\n        className += `${styles.theory}`;\r\n        return className;\r\n      } else {\r\n        className += `${styles.lab}`;\r\n        return className;\r\n      }\r\n    }\r\n    if (dayCount % 2 === 0) {\r\n      className += `${styles.evenDay}`;\r\n      return className;\r\n    } else {\r\n      className += `${styles.oddDay}`;\r\n      return className;\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <table\r\n        className={styles.timetablePreview}\r\n        onClick={async (e) => {\r\n          // console.log(\"event\", e, JSON.stringify(slots));\r\n          await select(slots);\r\n\r\n          document\r\n            .querySelectorAll(`.${styles.selectedTimetablePreview}`)\r\n            ?.forEach((element) =>\r\n              element.classList.remove(styles.selectedTimetablePreview)\r\n            );\r\n\r\n          let element = e.target;\r\n          while (element !== null && element !== undefined) {\r\n            if (element.classList.contains(styles.timetablePreview)) {\r\n              element.classList.add(styles.selectedTimetablePreview);\r\n              break;\r\n            }\r\n            element = element.parentNode;\r\n          }\r\n          document\r\n            .getElementById(\"timetable\")\r\n            ?.scrollIntoView({ behavior: \"smooth\" });\r\n        }}\r\n      >\r\n        <thead>\r\n          {timetableTemplateData.slice(0, 4).map((row, rowIndex) => {\r\n            return (\r\n              <tr key={`${id}-row-${rowIndex}`}>\r\n                {row.map((cell, index) => {\r\n                  return cell === \"\" ? (\r\n                    <></>\r\n                  ) : (\r\n                    <th\r\n                      key={`${id}-${rowIndex}-${index}`}\r\n                      className={getClassName(cell, rowIndex, index)}\r\n                      rowSpan={index === 0 ? 2 : 1}\r\n                    ></th>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </thead>\r\n        <tbody>\r\n          {timetableTemplateData.slice(4).map((row, rowIndex) => {\r\n            if (rowIndex % 2 === 0) dayCount++;\r\n            return (\r\n              <tr key={`${id}-row-${rowIndex}`}>\r\n                {row.map((cell, cellIndex) => {\r\n                  return cell === \"\" ? (\r\n                    <></>\r\n                  ) : (\r\n                    <td\r\n                      key={`${id}-${rowIndex}-${cellIndex}`}\r\n                      className={`${getClassName(\r\n                        cell,\r\n                        rowIndex + 4,\r\n                        cellIndex\r\n                      )}`}\r\n                      rowSpan={cellIndex === 0 ? 2 : 1}\r\n                    ></td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TimetablePreview;\r\n","export default __webpack_public_path__ + \"static/media/leftArrow.e3b7ae10.svg\";","export default __webpack_public_path__ + \"static/media/rightArrow.32621f09.svg\";","import TimetablePreview from \"./TimetablePreview\";\r\nimport styles from \"../css/TimetablePreviews.module.css\";\r\nimport timetableStyles from \"../css/Timetable.module.css\";\r\nimport { useState } from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport leftArrow from \"../assets/leftArrow.svg\";\r\nimport rightArrow from \"../assets/rightArrow.svg\";\r\n// using code from\r\n// https://ihsavru.medium.com/react-paginate-implementing-pagination-in-react-f199625a5c8e\r\n// for pagination.\r\nconst TimetablePreviews = ({ schedulesSlots, select }) => {\r\n  const previewsPerPage = 12;\r\n  const pageCount = Math.ceil(schedulesSlots.length / previewsPerPage);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const currentPageData = schedulesSlots\r\n    .slice(currentPage * previewsPerPage, (currentPage + 1) * previewsPerPage)\r\n    .map((slotsString) => {\r\n      const slots = slotsString.split(\"+\");\r\n      return (\r\n        <TimetablePreview\r\n          key={`${slotsString}-timetable`}\r\n          id={`${slotsString}-timetable`}\r\n          slots={slots}\r\n          select={select}\r\n        ></TimetablePreview>\r\n      );\r\n    });\r\n  const leftArrowNode = <img src={leftArrow} alt=\"<\" />;\r\n  const rightArrowNode = <img src={rightArrow} alt=\">\" />;\r\n  return (\r\n    <div className={styles.panel}>\r\n      <div className={timetableStyles.legend}>\r\n        <div className={timetableStyles.theoryLegend}>\r\n          <div className={timetableStyles.colorExample}></div>\r\n          <div className={timetableStyles.legendLabel}>Theory Slot</div>\r\n        </div>\r\n        <div className={timetableStyles.labLegend}>\r\n          <div className={timetableStyles.colorExample}></div>\r\n          <div className={timetableStyles.legendLabel}>Lab Slot</div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.container}>{currentPageData}</div>\r\n      <ReactPaginate\r\n        previousLabel={leftArrowNode}\r\n        nextLabel={rightArrowNode}\r\n        pageCount={pageCount}\r\n        onPageChange={({ selected }) => {\r\n          // console.log(\"page change\");\r\n          setCurrentPage(selected);\r\n          select([]);\r\n        }}\r\n        containerClassName={styles.paginatedPreviews}\r\n        pageClassName={styles.page}\r\n        previousLinkClassName={styles.previous}\r\n        nextLinkClassName={styles.next}\r\n        disabledClassName={styles.disabled}\r\n        activeClassName={styles.active}\r\n        forcePage={currentPage}\r\n      ></ReactPaginate>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimetablePreviews;\r\n","export default __webpack_public_path__ + \"static/media/camera.d811b08a.svg\";","import styles from \"../css/Timetable.module.css\";\r\nimport timetableTemplateData from \"../utils/timetableTemplateData\";\r\nimport cameraImg from \"../assets/camera.svg\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\nconst Timetable = ({ slots, selectedClasses, hoveredSlots }) => {\r\n  // console.log(\"rendering timetable\", slots);\r\n  let dayCount = 0;\r\n  const id = \"final-display\";\r\n  const getCellContent = (schedule, cell) => {\r\n    const courseIDs = Object.keys(schedule);\r\n    const courseID = courseIDs.find((courseID) =>\r\n      schedule[courseID][\"SLOT\"].split(\"+\").includes(cell)\r\n    );\r\n    if (\r\n      schedule === undefined ||\r\n      courseIDs.length === 0 ||\r\n      courseID === undefined ||\r\n      !(\r\n        schedule[courseID] &&\r\n        slots.includes(schedule[courseID][\"SLOT\"].split(\"+\")[0])\r\n      )\r\n    )\r\n      return cell;\r\n    return `${cell}-${courseID}-${schedule[courseID][\"ROOM NUMBER\"]}`;\r\n  };\r\n  const getClassName = (cellContent, rowIndex, cellIndex) => {\r\n    let className = `${styles.cell} `;\r\n    if (cellIndex < 2) {\r\n      className += `${styles.headDay}`;\r\n      return className;\r\n    }\r\n    if (rowIndex < 2) {\r\n      className += ` ${styles.theoryTiming} `;\r\n    }\r\n    if (rowIndex >= 2 && rowIndex < 4) {\r\n      className += ` ${styles.labTiming} `;\r\n    }\r\n    if (rowIndex < 4) {\r\n      className += ` ${styles.cell} ${styles.headTop} `;\r\n      return className;\r\n    }\r\n    if (cellContent === \"Lunch\") {\r\n      className += `${styles.lunch}`;\r\n      return className;\r\n    }\r\n    if (hoveredSlots.includes(cellContent)) {\r\n      if (rowIndex % 2 === 0) {\r\n        className += `${styles.theory} ${styles.hoveredTheory}`;\r\n        return className;\r\n      } else {\r\n        className += `${styles.lab} ${styles.hoveredLab}`;\r\n        return className;\r\n      }\r\n    }\r\n    if (slots.includes(cellContent)) {\r\n      if (rowIndex % 2 === 0) {\r\n        className += `${styles.theory}`;\r\n        return className;\r\n      } else {\r\n        className += `${styles.lab}`;\r\n        return className;\r\n      }\r\n    }\r\n    if (dayCount % 2 === 0) {\r\n      className += `${styles.evenDay}`;\r\n      return className;\r\n    } else {\r\n      className += `${styles.oddDay}`;\r\n      return className;\r\n    }\r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      <table className={styles.timetable} id=\"filled-out-timetable\">\r\n        <thead>\r\n          {timetableTemplateData.slice(0, 4).map((row, rowIndex) => {\r\n            return (\r\n              <tr key={`${id}-row-${rowIndex}`}>\r\n                {row.map((cell, index) => {\r\n                  return cell === \"\" || index === 1 ? (\r\n                    <></>\r\n                  ) : (\r\n                    <th\r\n                      key={`${id}-${rowIndex}-${index}`}\r\n                      className={getClassName(cell, rowIndex, index)}\r\n                      rowSpan={index === 0 ? 2 : 1}\r\n                    >\r\n                      {cell !== \"Lunch\" ? cell : \"\"}\r\n                    </th>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </thead>\r\n        <tbody>\r\n          {timetableTemplateData.slice(4).map((row, rowIndex) => {\r\n            if (rowIndex % 2 === 0) dayCount++;\r\n            return (\r\n              <tr key={`${id}-row-${rowIndex}`}>\r\n                {row.map((cell, cellIndex) => {\r\n                  return cell === \"\" ||\r\n                    cellIndex === 1 ||\r\n                    (rowIndex > 0 && cell === \"Lunch\") ? (\r\n                    <></>\r\n                  ) : (\r\n                    <td\r\n                      key={`${id}-${rowIndex}-${cellIndex}`}\r\n                      className={`${getClassName(\r\n                        cell,\r\n                        rowIndex + 4,\r\n                        cellIndex\r\n                      )}`}\r\n                      rowSpan={cell === \"Lunch\" ? 14 : cellIndex === 0 ? 2 : 1}\r\n                    >\r\n                      {getCellContent(selectedClasses, cell)}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div className={styles.buttons}>\r\n        <input\r\n          type=\"image\"\r\n          src={cameraImg}\r\n          alt=\"Download timetable image\"\r\n          onClick={() => {\r\n            const help = document.getElementById(\"help\");\r\n            html2canvas(help, {\r\n              // allowTaint: true,\r\n              // backgroundColor: \"#000\",\r\n              // foreignObjectRendering: true,\r\n              // logging: true,\r\n              // useCORS: true,\r\n            }).then((canvas) => {\r\n              console.log(help, canvas);\r\n              const a = document.createElement(\"a\");\r\n              a.href = canvas.toDataURL(\"image/png\");\r\n              // a.download = `timetable-${slots.join(\"+\")}.png`;\r\n              a.download = \"help.png\";\r\n              a.click();\r\n            });\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timetable;\r\n","const InfoCols = ({\r\n  keys,\r\n  entry,\r\n  getID,\r\n  styles,\r\n  ignoreCols,\r\n  onClick,\r\n  onMouseEnter,\r\n  onMouseLeave,\r\n}) => {\r\n  return (\r\n    <>\r\n      {keys.map((key) => {\r\n        if (\r\n          ignoreCols === undefined ||\r\n          (ignoreCols && !ignoreCols.includes(key))\r\n        )\r\n          return (\r\n            <td\r\n              className={styles.cell + \" \" + styles[key]}\r\n              key={getID(entry) + \"-c-\" + key}\r\n              onClick={onClick}\r\n              onMouseEnter={onMouseEnter}\r\n              onMouseLeave={onMouseLeave}\r\n            >\r\n              {entry[key]}\r\n            </td>\r\n          );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InfoCols;\r\n","import ReactPaginate from \"react-paginate\";\r\nimport InfoCols from \"./InfoCols\";\r\nimport styles from \"../css/Classes.module.css\";\r\nimport { getCourseID } from \"../utils/generalUtils\";\r\nimport { useEffect, useState } from \"react\";\r\nimport leftArrow from \"../assets/leftArrow.svg\";\r\nimport rightArrow from \"../assets/rightArrow.svg\";\r\nconst Classes = ({\r\n  schedules,\r\n  slots,\r\n  selectedClasses,\r\n  setSelectedClasses,\r\n  setHoveredSlots,\r\n  classPreferences,\r\n}) => {\r\n  // console.log(\"rendering classes\", slots);\r\n  const ignoreCols = [\r\n    \"REGISTERED SEATS\",\r\n    \"ASSO CLASS ID\",\r\n    \"COURSE ID\",\r\n    \"CLASS OPTION\",\r\n    \"CLASS TYPE\",\r\n    \"WAITING SEATS\",\r\n    \"COURSE STATUS\",\r\n    \"COURSE MODE\",\r\n    \"COURSE CODE\",\r\n    \"BATCH\",\r\n    \"ALLOCATED SEATS\",\r\n  ];\r\n  const courseIDs = schedules?.length > 0 ? Object.keys(schedules[0]) : [];\r\n  const classes = {};\r\n  const previewsPerPage = 1;\r\n  const pageCount = courseIDs?.length / previewsPerPage;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const isUnique = (fieldName, array, element) => {\r\n    return !array.some(\r\n      (currentElement) => currentElement[fieldName] === element[fieldName]\r\n    );\r\n  };\r\n  const getScore = (courseID, classData) => {\r\n    return (\r\n      (classPreferences[courseID]?.length -\r\n        classPreferences[courseID]?.findIndex(\r\n          (_classData) => _classData[\"CLASS ID\"] === classData[\"CLASS ID\"]\r\n        )) /\r\n      classPreferences[courseID]?.length\r\n    );\r\n  };\r\n  const getScheduleScore = (schedule) => {\r\n    let score = 0;\r\n    Object.keys(schedule).forEach(\r\n      (courseID) => (score += getScore(courseID, schedule[courseID]))\r\n    );\r\n    return score;\r\n  };\r\n  schedules?.sort((a, b) => getScheduleScore(b) - getScheduleScore(a));\r\n  // schedules?.forEach(schedule => console.log())\r\n  // console.log(schedules?.map((schedule) => getScheduleScore(schedule)));\r\n  schedules?.forEach((schedule) =>\r\n    courseIDs?.forEach((courseID) => {\r\n      if (classes[courseID] === undefined) classes[courseID] = [];\r\n      if (isUnique(\"CLASS ID\", classes[courseID], schedule[courseID]))\r\n        classes[courseID].push(schedule[courseID]);\r\n    })\r\n  );\r\n  courseIDs.sort((a, b) => classes[b].length - classes[a].length);\r\n  courseIDs.forEach((courseID) =>\r\n    classes[courseID]?.sort(\r\n      (a, b) => getScore(courseID, b) - getScore(courseID, a)\r\n    )\r\n  );\r\n  // console.log(\r\n  //   courseIDs.map((courseID) =>\r\n  //     classes[courseID]?.map((classData) => getScore(courseID, classData))\r\n  //   )\r\n  // );\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(0);\r\n    // useForceUpdate();\r\n  }, [slots, schedules]);\r\n  // useEffect(() => {}, [selectedClasses]);\r\n\r\n  useEffect(() => {\r\n    const newSelectedClasses = {};\r\n    // console.log(\"classes\", classes);\r\n    // console.log(\"schedules[0]\", schedules, schedules[0]);\r\n    if (schedules !== undefined && schedules.length > 0)\r\n      for (const courseID of Object.keys(schedules[0])) {\r\n        newSelectedClasses[courseID] = schedules[0][courseID];\r\n      }\r\n    setSelectedClasses(newSelectedClasses);\r\n  }, [slots, schedules]);\r\n\r\n  // const getFacultyByID = (erpID, courseID) => {\r\n  //   if (courseID !== undefined)\r\n  //     return classesData[courseID].find(\r\n  //       (element) => element[\"ERP ID\"] === erpID\r\n  //     );\r\n  //   for (const courseID of courseIDs) {\r\n  //     const foundElement = classesData[courseID].find(\r\n  //       (element) => element[\"ERP ID\"] === erpID\r\n  //     );\r\n  //     if (foundElement !== undefined) return foundElement;\r\n  //   }\r\n  //   return undefined;\r\n  // };\r\n\r\n  const isSelectedClass = (classToBeChecked, currentCourseID) => {\r\n    return (\r\n      selectedClasses[currentCourseID] !== undefined &&\r\n      selectedClasses[currentCourseID][\"CLASS ID\"] ===\r\n        classToBeChecked[\"CLASS ID\"]\r\n    );\r\n  };\r\n\r\n  const getClassName = (classToBeChecked) => {\r\n    let className = `${styles.tableRow} `;\r\n    const newSlots = classToBeChecked[\"SLOT\"].split(\"+\");\r\n    const noSlotConflict =\r\n      newSlots.find(\r\n        (slot) =>\r\n          Object.keys(selectedClasses).find(\r\n            (courseID) =>\r\n              getCourseID(classToBeChecked) !== courseID &&\r\n              selectedClasses[courseID][\"SLOT\"].split(\"+\").includes(slot)\r\n          ) !== undefined\r\n      ) === undefined;\r\n    if (!noSlotConflict) className += `${styles.faded} `;\r\n    return className;\r\n  };\r\n\r\n  const InteractionElement = ({ currentClass, customKey, currentCourseID }) => {\r\n    return (\r\n      <td className={styles.cell}>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"selected\"\r\n          id={`${customKey}-selected`}\r\n          key={customKey}\r\n          onClick={(e) => {\r\n            let newSelectedClasses = selectedClasses;\r\n            if (newSelectedClasses[currentCourseID] === undefined)\r\n              newSelectedClasses[currentCourseID] = {};\r\n            if (e.target.checked) {\r\n              for (const courseIDToBeChecked of Object.keys(\r\n                newSelectedClasses\r\n              )) {\r\n                if (\r\n                  currentCourseID !== courseIDToBeChecked &&\r\n                  newSelectedClasses[courseIDToBeChecked][\"SLOT\"]\r\n                    ?.split(\"+\")\r\n                    ?.find((slot) =>\r\n                      currentClass[\"SLOT\"].split(\"+\").includes(slot)\r\n                    )\r\n                ) {\r\n                  delete newSelectedClasses[courseIDToBeChecked];\r\n                }\r\n              }\r\n              if (!isSelectedClass(currentClass))\r\n                newSelectedClasses[currentCourseID] = currentClass;\r\n            } else {\r\n              delete newSelectedClasses[currentCourseID];\r\n            }\r\n            setSelectedClasses({ ...newSelectedClasses });\r\n          }}\r\n          defaultChecked={isSelectedClass(currentClass, currentCourseID)}\r\n          className={styles.checkbox}\r\n        />\r\n      </td>\r\n    );\r\n  };\r\n\r\n  const handleHover = (hoveredClass, element) => {\r\n    if (hoveredClass === undefined) return;\r\n    setHoveredSlots(hoveredClass[\"SLOT\"].split(\"+\"));\r\n    document\r\n      .querySelectorAll(`.${styles.hoverRow}`)\r\n      .forEach((e) => e.classList.remove(styles.hoverRow));\r\n    let currentElement = element?.target;\r\n    while (\r\n      currentElement !== null &&\r\n      currentElement !== undefined &&\r\n      !currentElement?.classList?.contains(styles.tableRow)\r\n    ) {\r\n      currentElement = currentElement.parentNode;\r\n    }\r\n    currentElement?.classList?.add(styles.hoverRow);\r\n  };\r\n\r\n  const handleDehover = (hoveredClass, element) => {\r\n    setHoveredSlots([]);\r\n    document\r\n      .querySelectorAll(`.${styles.hoverRow}`)\r\n      .forEach((e) => e.classList.remove(styles.hoverRow));\r\n  };\r\n  const columnKeys = [];\r\n  const colsHeadings = () => {\r\n    columnKeys.length = 0;\r\n    return courseIDs?.length > 0 && schedules[0][courseIDs[0]] !== undefined\r\n      ? Object.keys(schedules[0][courseIDs[0]]).map((colName, index) => {\r\n          if (ignoreCols && !ignoreCols.includes(colName)) {\r\n            columnKeys.push(colName);\r\n            return (\r\n              <th\r\n                className={`${styles.cell} ${styles.headRow}`}\r\n                key={`${slots.join(\"\")}-${index}-head-${colName}`}\r\n              >\r\n                {colName}\r\n              </th>\r\n            );\r\n          }\r\n        })\r\n      : [];\r\n  };\r\n\r\n  // const currentPageData = courseIDs\r\n  //   ?.slice(currentPage * previewsPerPage, (currentPage + 1) * previewsPerPage)\r\n  //   ?.map((courseID) => {\r\n  //     return (\r\n  //       <div\r\n  //         className={styles.container}\r\n  //         key={`${slots.join(\"\")}-${courseID}`}\r\n  //       ></div>\r\n  //     );\r\n  //   });\r\n\r\n  const currentPageData = courseIDs\r\n    ?.slice(currentPage * previewsPerPage, (currentPage + 1) * previewsPerPage)\r\n    ?.map((courseID) => {\r\n      return (\r\n        <div\r\n          className={styles.tableWrapper}\r\n          key={`${slots.join(\"\")}-${courseID}`}\r\n        >\r\n          <table className={styles.table}>\r\n            <thead>\r\n              <tr>\r\n                <th\r\n                  className={`${styles.cell} ${styles.headRow}`}\r\n                  colSpan={colsHeadings().length}\r\n                >\r\n                  {courseID}\r\n                </th>\r\n              </tr>\r\n\r\n              <tr>\r\n                <th className={`${styles.cell} ${styles.headRow}`}></th>\r\n\r\n                {colsHeadings()}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {selectedClasses[courseID] === undefined ? (\r\n                <></>\r\n              ) : (\r\n                <tr\r\n                  key={`${slots.join(\"\")}-${courseID}-${\r\n                    selectedClasses[courseID][\"CLASS ID\"]\r\n                  }`}\r\n                  className={styles.tableRow}\r\n                  onMouseEnter={(e) =>\r\n                    handleHover(selectedClasses[courseID], e)\r\n                  }\r\n                  onMouseLeave={(e) =>\r\n                    handleDehover(selectedClasses[courseID], e)\r\n                  }\r\n                  id={`${selectedClasses[courseID][\"CLASS ID\"]}`}\r\n                >\r\n                  <InteractionElement\r\n                    currentClass={selectedClasses[courseID]}\r\n                    customKey={`${slots.join(\"\")}-${courseID}-${\r\n                      selectedClasses[courseID][\"CLASS ID\"]\r\n                    }`}\r\n                    currentCourseID={courseID}\r\n                  ></InteractionElement>\r\n\r\n                  <InfoCols\r\n                    keys={columnKeys}\r\n                    entry={selectedClasses[courseID]}\r\n                    styles={styles}\r\n                    ignoreCols={ignoreCols}\r\n                    getID={() =>\r\n                      `${slots.join(\"\")}-${courseID}-${\r\n                        selectedClasses[courseID][\"CLASS ID\"]\r\n                      }`\r\n                    }\r\n                  ></InfoCols>\r\n                </tr>\r\n              )}\r\n              {classes[courseID]?.map((currentClass) => {\r\n                if (!isSelectedClass(currentClass, courseID))\r\n                  return (\r\n                    <tr\r\n                      key={`${slots.join(\"\")}-${courseID}-${\r\n                        currentClass[\"CLASS ID\"]\r\n                      }`}\r\n                      onMouseEnter={(e) => handleHover(currentClass, e)}\r\n                      onMouseLeave={(e) => handleDehover(currentClass, e)}\r\n                      className={getClassName(currentClass)}\r\n                      id={`${currentClass[\"CLASS ID\"]}`}\r\n                    >\r\n                      <InteractionElement\r\n                        currentClass={currentClass}\r\n                        customKey={`${slots.join(\"\")}-${courseID}-${\r\n                          currentClass[\"CLASS ID\"]\r\n                        }`}\r\n                        currentCourseID={courseID}\r\n                      ></InteractionElement>\r\n\r\n                      <InfoCols\r\n                        keys={columnKeys}\r\n                        entry={currentClass}\r\n                        styles={styles}\r\n                        ignoreCols={ignoreCols}\r\n                        getID={() =>\r\n                          `${slots.join(\"\")}-${courseID}-${\r\n                            currentClass[\"CLASS ID\"]\r\n                          }`\r\n                        }\r\n                      ></InfoCols>\r\n                    </tr>\r\n                  );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    });\r\n  const leftArrowNode = <img src={leftArrow} alt=\"<\" />;\r\n  const rightArrowNode = <img src={rightArrow} alt=\">\" />;\r\n  return schedules === undefined || schedules.length <= 0 ? (\r\n    <></>\r\n  ) : (\r\n    <div className={styles.panel}>\r\n      <ReactPaginate\r\n        previousLabel={leftArrowNode}\r\n        nextLabel={rightArrowNode}\r\n        pageCount={pageCount}\r\n        onPageChange={({ selected }) => {\r\n          setCurrentPage(selected);\r\n        }}\r\n        pageLabelBuilder={(page) => {\r\n          return courseIDs[page - 1];\r\n        }}\r\n        containerClassName={styles.schedulesPagination}\r\n        pageClassName={styles.page}\r\n        previousLinkClassName={styles.previous}\r\n        nextLinkClassName={styles.next}\r\n        disabledClassName={styles.disabled}\r\n        activeClassName={styles.active}\r\n        marginPagesDisplayed={1}\r\n        forcePage={currentPage}\r\n      ></ReactPaginate>\r\n      <div className={styles.container}>{currentPageData}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Classes;\r\n","import { useEffect, useState } from \"react\";\r\nimport Timetable from \"./Timetable\";\r\nimport Classes from \"./Classes\";\r\nimport styles from \"../css/Timetables.module.css\";\r\n\r\nconst Timetables = ({ schedules, slots, classes }) => {\r\n  // console.log(\"rerendering Timetables(\", schedules, slots, faculties, \")\");\r\n  const [selectedClasses, setSelectedClasses] = useState({});\r\n  const [hoveredSlots, setHoveredSlots] = useState([]);\r\n  useEffect(() => {\r\n    setHoveredSlots([]);\r\n  }, [slots]);\r\n  return (\r\n    <div id=\"#timetables-screen\" className={styles.timetablesScreen}>\r\n      <Timetable\r\n        selectedClasses={selectedClasses}\r\n        slots={slots}\r\n        hoveredSlots={hoveredSlots}\r\n      ></Timetable>\r\n      {slots !== undefined && slots.length > 0 ? (\r\n        <Classes\r\n          schedules={schedules[slots.join(\"+\")]}\r\n          slots={slots}\r\n          selectedClasses={selectedClasses}\r\n          setSelectedClasses={setSelectedClasses}\r\n          setHoveredSlots={setHoveredSlots}\r\n          classPreferences={classes}\r\n        ></Classes>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timetables;\r\n","import { useEffect, useState } from \"react\";\r\nimport styles from \"../css/TimetablesSection.module.css\";\r\nimport TimetablePreviews from \"./TimetablePreviews\";\r\nimport Timetables from \"./Timetables\";\r\n\r\nconst TimetablesSection = ({\r\n  schedules,\r\n  classes,\r\n  selectSlots,\r\n  currentlySelectedSlots,\r\n}) => {\r\n  /**\r\n   * Array containing slots of each schedule type\r\n   */\r\n  const schedulesSlots = Object.keys(schedules);\r\n  useEffect(() => {\r\n    // setCurrentlySelectedSlots([]);\r\n  }, [schedules]);\r\n  // console.log({ schedulesSlots });\r\n\r\n  return (\r\n    <div\r\n      className={`${styles.screen} ${\r\n        schedulesSlots.length > 0 ? \"\" : styles.disableScreen\r\n      }`}\r\n    >\r\n      <span className={styles.goto} id=\"timetable-previews\">\r\n        &nbsp;\r\n      </span>\r\n      <TimetablePreviews\r\n        schedulesSlots={schedulesSlots}\r\n        select={selectSlots}\r\n      ></TimetablePreviews>\r\n      <span className={styles.goto} id=\"timetable\">\r\n        &nbsp;\r\n      </span>\r\n      <Timetables\r\n        schedules={schedules}\r\n        slots={currentlySelectedSlots}\r\n        classes={classes}\r\n      ></Timetables>\r\n\r\n      {/* <div className={styles.twoCols}></div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimetablesSection;\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgQuarterEllipse(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 1225,\n    height: 760,\n    viewBox: \"0 0 1225 760\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M-5 755.292C1313.61 829.189 1223.71 8.93198 1223.71 -4H-5V755.292Z\",\n    fill: \"#4D60C7\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgQuarterEllipse);\nexport default __webpack_public_path__ + \"static/media/quarterEllipse.c73c7fea.svg\";\nexport { ForwardRef as ReactComponent };","import Header from \"./Header\";\r\nimport Options from \"./Options\";\r\nimport TimetablesSection from \"./TimetablesSection\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ReactComponent as QuarterEllipse } from \"../assets/quarterEllipse.svg\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport {\r\n  getTimetables,\r\n  getCourseID,\r\n  getSlotCombinations,\r\n  populateSlotCombination,\r\n} from \"../utils/generalUtils\";\r\nimport styles from \"../css/Main.module.css\";\r\nconst Main = () => {\r\n  const [allSchedules, setAllSchedules] = useState({});\r\n  const [classes, setClasses] = useState({});\r\n  const [reservedSlots, setReservedSlots] = useState([]);\r\n  const [currentlySelectedSlots, setCurrentlySelectedSlots] = useState([]);\r\n  const [finalizedClasses, setFinalizedClasses] = useState([]);\r\n  // const populateAllSchedules = async (courses, faculties, reservedSlots) => {\r\n  //   setAllSchedules([]);\r\n  //   setAllSchedules(await getTimetables(courses, faculties, reservedSlots));\r\n  //   setFaculties({ ...faculties });\r\n  // };\r\n  // let prevSlotStrings = []\r\n\r\n  // useEffect(() => {\r\n  // let same = true\r\n  // for (const slotString of prevSlotStrings) {\r\n  //   if()\r\n  // }\r\n  //   if (Object.keys(allSchedules).length > 0) {\r\n  //     let element = document.getElementById(\"timetable-previews\");\r\n  //     element?.scrollIntoView({ behavior: \"smooth\" });\r\n  //   }\r\n  // }, [allSchedules]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"updated allSchedules\", allSchedules);\r\n  }, [allSchedules]);\r\n  const getAllSlotCombinations = async (classes, reservedSlots) => {\r\n    setAllSchedules({});\r\n    setAllSchedules(await getSlotCombinations(classes, reservedSlots));\r\n    setClasses({ ...classes });\r\n    setReservedSlots([...reservedSlots]);\r\n  };\r\n\r\n  const getSchedulesForSlots = async (newSlotsString) => {\r\n    const result = await populateSlotCombination(\r\n      classes,\r\n      reservedSlots,\r\n      newSlotsString,\r\n      allSchedules\r\n    );\r\n    if (newSlotsString.length > 0)\r\n      setAllSchedules((prevAllSchedules) => {\r\n        prevAllSchedules[newSlotsString] = result[newSlotsString];\r\n        return { ...prevAllSchedules };\r\n      });\r\n  };\r\n  const selectSlots = async (slots) => {\r\n    getSchedulesForSlots(slots.join(\"+\"));\r\n    setCurrentlySelectedSlots(slots);\r\n  };\r\n\r\n  return (\r\n    <Container className={styles.container}>\r\n      <Options\r\n        getCourseID={getCourseID}\r\n        generateTimetables={getAllSlotCombinations}\r\n        selectSlots={selectSlots}\r\n      />\r\n      <TimetablesSection\r\n        schedules={allSchedules}\r\n        classes={classes}\r\n        getSchedulesForSlots={getSchedulesForSlots}\r\n        currentlySelectedSlots={currentlySelectedSlots}\r\n        selectSlots={selectSlots}\r\n      ></TimetablesSection>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","export default __webpack_public_path__ + \"static/media/aboutPageLady.7f303e54.svg\";","export default __webpack_public_path__ + \"static/media/aboutPageSchedules.4f21dce0.svg\";","import styles from \"../css/About.module.css\";\r\nimport lady from \"../assets/aboutPageLady.svg\";\r\nimport schedules from \"../assets/aboutPageSchedules.svg\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <div className={styles.title}>\r\n          <span className={styles.goto} id=\"about\">\r\n            &nbsp;\r\n          </span>\r\n          <h1 className=\"heading1\">About Us</h1>\r\n        </div>\r\n        <div className={styles.cols}>\r\n          <div className={styles.col}>\r\n            <div className={styles.content}>\r\n              <div className={styles.title}>\r\n                <h2 className=\"heading2\">Our Vision</h2>\r\n              </div>\r\n              <p className=\"body1-medium\">\r\n                lyFFCSaver aims at providing a user-friendly interface using\r\n                which students can prepare their own timetables for the upcoming\r\n                semesters with ease, saving them the hassle of using the fully\r\n                flexible credit system.\r\n              </p>\r\n            </div>\r\n            <img src={lady} alt=\"\" />\r\n          </div>\r\n          <div className={`${styles.col} ${styles.features}`}>\r\n            <img src={schedules} alt=\"\" />\r\n            <div className={styles.content}>\r\n              <div className={styles.title}>\r\n                <h2 className=\"heading2\">Features</h2>\r\n              </div>\r\n              <p className=\"body1-medium\">\r\n                Choose from a variety of courses and faculties to find your\r\n                perfect fit. Want to keep fridays light? Don’t like waking up\r\n                early everyday? Don’t worry, we’ve got you covered. Keep slots\r\n                free according to your convenience.\r\n              </p>\r\n              <p className=\"body1-medium\">\r\n                Find the timetable which suits you best from multiple options.\r\n                Take screenshots for saving and sharing.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","export default __webpack_public_path__ + \"static/media/toggleTriangle.e6996ec4.svg\";","import styles from \"../css/Faq.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  Accordion,\r\n  AccordionContext,\r\n  Card,\r\n  useAccordionToggle,\r\n} from \"react-bootstrap\";\r\nimport toggleTriangle from \"../assets/toggleTriangle.svg\";\r\nimport { useContext } from \"react\";\r\n\r\nconst Faq = () => {\r\n  const questions = [\"What is FFCS?\", \"question 2\", \"question 3\", \"question 4\"];\r\n  const answers = [\r\n    \"FFCS refers to the fully flexible credit system offered by VIT, allowing students to make timetables according to their needs. With this, students can choose their own subjects, slots, faculties, class timings and venues. Even though this sounds easy, this process can be confusing and complicated, specially for first timers.\",\r\n    \"answer 2\",\r\n    \"answer 3\",\r\n    \"answer 4\",\r\n  ];\r\n  function ContextAwareToggle({ children, eventKey, callback }) {\r\n    const currentEventKey = useContext(AccordionContext);\r\n\r\n    const decoratedOnClick = useAccordionToggle(\r\n      eventKey,\r\n      () => callback && callback(eventKey)\r\n    );\r\n\r\n    const isCurrentEventKey = currentEventKey === eventKey;\r\n\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        className={`${styles.btn} ${isCurrentEventKey ? styles.clicked : \"\"}`}\r\n        onClick={decoratedOnClick}\r\n      >\r\n        <span></span>\r\n        <img src={toggleTriangle} alt=\">\" />\r\n        {children}\r\n      </button>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <div className={styles.title}>\r\n          <span className={styles.goto} id=\"faq\">\r\n            &nbsp;\r\n          </span>\r\n          <h1 className=\"heading1\">Frequently Asked Questions</h1>\r\n        </div>\r\n        <div className={styles.faqContainer}>\r\n          <Accordion className={styles.accordion}>\r\n            {questions.map((question, index) => {\r\n              return (\r\n                <Card className={styles.questionCard} key={index + question}>\r\n                  <Card.Header className={styles.header}>\r\n                    <ContextAwareToggle\r\n                      eventKey={index + 1}\r\n                    ></ContextAwareToggle>\r\n                    <div className={`${styles.headerText} heading3`}>\r\n                      {question}\r\n                    </div>\r\n                  </Card.Header>\r\n                  <Accordion.Collapse eventKey={index + 1}>\r\n                    <Card.Body className={`${styles.bodyText} body1-medium`}>\r\n                      {answers[index]}\r\n                    </Card.Body>\r\n                  </Accordion.Collapse>\r\n                </Card>\r\n              );\r\n            })}\r\n          </Accordion>\r\n        </div>\r\n        <div className={styles.fadedText}>\r\n          <p className=\"body1-bold\">Still have questions?</p>\r\n          <p className=\"body2-medium\">\r\n            If you cannot find answers to your questions here, you can always{\" \"}\r\n            <NavLink activeClassName={styles.active} to=\"/contact\">\r\n              contact us\r\n            </NavLink>\r\n            . <br />\r\n            We will answer to you shortly!\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Faq;\r\n","export default __webpack_public_path__ + \"static/media/faqPattern.ed9d4615.svg\";","export default __webpack_public_path__ + \"static/media/contactIllustration.d2aaf54a.svg\";","export default __webpack_public_path__ + \"static/media/contactNameIcon.6ada76d8.svg\";","export default __webpack_public_path__ + \"static/media/contactEmailIcon.10e29a73.svg\";","export default __webpack_public_path__ + \"static/media/contactMessageIcon.9f13b164.svg\";","import Header from \"./Header\";\r\nimport pattern from \"../assets/faqPattern.svg\";\r\nimport styles from \"../css/Contact.module.css\";\r\nimport contactIllustration from \"../assets/contactIllustration.svg\";\r\nimport contactNameIcon from \"../assets/contactNameIcon.svg\";\r\nimport contactEmailIcon from \"../assets/contactEmailIcon.svg\";\r\nimport contactMessageIcon from \"../assets/contactMessageIcon.svg\";\r\nconst Contact = () => {\r\n  return (\r\n    <>\r\n      <div className={styles.wrapper}>\r\n        {/* <Header /> */}\r\n        <div className={styles.container}>\r\n          <div className={styles.title}>\r\n            <span className={styles.goto} id=\"contact\">\r\n              &nbsp;\r\n            </span>\r\n            <h1>Contact Us</h1>\r\n          </div>\r\n          <div className={styles.subTitle}>\r\n            <h6>Any questions or remarks? Send us a message!</h6>\r\n          </div>\r\n          <div className={styles.cols}>\r\n            <div className={`${styles.col} ${styles.col1}`}>\r\n              <form\r\n                acceptCharset=\"UTF-8\"\r\n                action=\"https://www.formbackend.com/f/b97b77740d90fb8d\"\r\n                method=\"POST\"\r\n                className={styles.emailForm}\r\n                onSubmit={(e) => {\r\n                  document.querySelector(\"form\").reset();\r\n                }}\r\n              >\r\n                <ul>\r\n                  <li>\r\n                    <label htmlFor=\"name\">Your Name</label>\r\n                    <div className={styles.inputContainer}>\r\n                      <div className={styles.placeholder}>\r\n                        <img\r\n                          src={contactNameIcon}\r\n                          alt=\"\"\r\n                          className={styles.placeholderImage}\r\n                        />\r\n                        <p>Name</p>\r\n                      </div>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        className={`${styles.inputField} ${styles.nameInput}`}\r\n                        onFocus={(e) => {\r\n                          e.target?.parentNode?.classList.add(\r\n                            styles.disablePlaceholder\r\n                          );\r\n                        }}\r\n                        onBlur={(e) => {\r\n                          if (e.target?.value === \"\")\r\n                            e.target?.parentNode?.classList.remove(\r\n                              styles.disablePlaceholder\r\n                            );\r\n                        }}\r\n                        onChange={(e) => {\r\n                          e.target?.parentNode?.classList.add(\r\n                            styles.disablePlaceholder\r\n                          );\r\n                        }}\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <label htmlFor=\"email\">Your E-mail</label>\r\n                    <div className={styles.inputContainer}>\r\n                      <div className={styles.placeholder}>\r\n                        <img\r\n                          src={contactEmailIcon}\r\n                          alt=\"\"\r\n                          className={styles.placeholderImage}\r\n                        />\r\n                        <p>Email</p>\r\n                      </div>\r\n                      <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        className={`${styles.inputField} ${styles.emailInput}`}\r\n                        onFocus={(e) => {\r\n                          e.target?.parentNode?.classList.add(\r\n                            styles.disablePlaceholder\r\n                          );\r\n                        }}\r\n                        onBlur={(e) => {\r\n                          if (e.target?.value === \"\")\r\n                            e.target?.parentNode?.classList.remove(\r\n                              styles.disablePlaceholder\r\n                            );\r\n                        }}\r\n                        onChange={(e) => {\r\n                          e.target?.parentNode?.classList.add(\r\n                            styles.disablePlaceholder\r\n                          );\r\n                        }}\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <label htmlFor=\"message\">Your message</label>\r\n                    <div\r\n                      className={`${styles.inputContainer} ${styles.messageInputContainer}`}\r\n                    >\r\n                      <div className={`${styles.placeholder} `}>\r\n                        <img\r\n                          src={contactMessageIcon}\r\n                          alt=\"\"\r\n                          className={styles.placeholderImage}\r\n                        />\r\n                        <p>Message</p>\r\n                      </div>\r\n                      <textarea\r\n                        name=\"message\"\r\n                        id=\"message\"\r\n                        className={`${styles.inputField} ${styles.messageInput}`}\r\n                        rows={5}\r\n                        onFocus={(e) => {\r\n                          e.target?.parentNode?.classList.add(\r\n                            styles.disablePlaceholder\r\n                          );\r\n                        }}\r\n                        onBlur={(e) => {\r\n                          if (e.target?.value === \"\")\r\n                            e.target?.parentNode?.classList.remove(\r\n                              styles.disablePlaceholder\r\n                            );\r\n                        }}\r\n                        onChange={(e) => {\r\n                          e.target?.parentNode?.classList.add(\r\n                            styles.disablePlaceholder\r\n                          );\r\n                        }}\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </li>\r\n                  <li className={styles.submitRow}>\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"Send Message\"\r\n                      className={styles.sendButton}\r\n                    />\r\n                  </li>\r\n                </ul>\r\n              </form>\r\n            </div>\r\n            <div className={`${styles.col} ${styles.col2}`}>\r\n              <img\r\n                src={contactIllustration}\r\n                alt=\"Illustration of three people sending mail.\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <img className={styles.pattern} src={pattern} alt=\"\" /> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import styles from \"./css/App.module.css\";\r\nimport Main from \"./components/Main\";\r\nimport About from \"./components/About\";\r\nimport FAQ from \"./components/Faq\";\r\nimport Contact from \"./components/Contact\";\r\nimport Header from \"./components/Header\";\r\n\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nconst HeaderWithRouter = withRouter(Header);\r\n\r\nfunction App() {\r\n  {\r\n    // <>\r\n    //   <Main></Main>\r\n    //   <div className={styles.screen}>\r\n    //     <About></About>\r\n    //     <FAQ></FAQ>\r\n    //     <Contact></Contact>\r\n    //   </div>\r\n    // </>\r\n  }\r\n  return (\r\n    <Router>\r\n      <HeaderWithRouter></HeaderWithRouter>\r\n      <Switch>\r\n        <Route path=\"/about\">\r\n          <About></About>\r\n        </Route>\r\n        <Route path=\"/faq\">\r\n          <FAQ></FAQ>\r\n        </Route>\r\n        <Route path=\"/contact\">\r\n          <Contact></Contact>\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Main></Main>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport Header from \"../src/components/Header\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../src/css/fontStyles.css\";\r\n// import { Navbar, Nav, Container } from \"react-bootstrap\";\r\n// import logo from \"../src/assets/logo.svg\";\r\n// import styles from \"../src/css/Header.module.css\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}